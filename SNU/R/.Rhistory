coef_comparison  = matrix(ncol = nrow(bayes_test), nrow = 5000)
colnames(coef_comparison) = bayes_test[,1]
for(i in 1:ncol(coef_comparison)){
coef_comparison[,i] = rnorm(n = 5000, mean = bayes_test[i,2], sd = bayes_test[i,3])
}
a = melt(coef_comparison)[,2:3]
b = pooled_ols$coefficients[28]
q = data.frame(matrix(nrow = length(rd_UPC), ncol = 2))
for(i in 1:length(tt_UPC)){
# UPC 별 linear regression
temp = lm(unit~., data = rd_train[rd_train$UPC %in% tt_UPC[i],c(response_variable, explanatory_variable)])
q[i,1] = tt_UPC[i]
q[i,2] = temp$coefficient[28]
if(i%%100==0){print(i)}
}
a = a %>% filter(Var2 %in% tt_UPC) #%>% mutate(grp = rep(c('TFS',	'Face It',	'Lovely Me:ex',	'Lovely Me:ex',	'Brow Master',	'TFS',	'TFS',	'미감수',	'Natural Sun',	'갈아만든',	'미감수',	'TFS'), each = 5000))
q = q %>% filter(X1 %in% tt_UPC)
#a = a %>% filter(Var2 != 31500200)
#q = q %>% filter(X1 != 31500200)
library(RColorBrewer)
ggplot() +
geom_boxplot(data = a, aes(x = factor(Var2), y = value, col = 'bayesian')) +
geom_point(data = q, aes(x = factor(X1), y = X2, col = 'SKU_ols'), size = 3, stroke = 0, shape = 16) +
geom_hline(aes(yintercept = b, col = 'pooled_ols')) +
#scale_fill_brewer(palette = 'Pastel2') +
#scale_color_brewer(palette = 'RdBu') +
#scale_color_manual(values = c('blue', 'red')) +
ylim(c(-2,5)) +
labs(title = '20%_discount parameter estimator from different regression models', fill = 'brand', colour = 'regression models') +
xlab('SKU')+
ylab('parameter') +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=45, hjust=1))
#pooled_ols = lm(unit~., data = rd_train[,c(response_variable,explanatory_variable,brand,cat)])
tt_UPC = sample(t_UPC, 10)
bayes_test = cbind(bayes_brand_coef[,c(1,29)], bayes_brand_sd[,29])
coef_comparison  = matrix(ncol = nrow(bayes_test), nrow = 5000)
colnames(coef_comparison) = bayes_test[,1]
for(i in 1:ncol(coef_comparison)){
coef_comparison[,i] = rnorm(n = 5000, mean = bayes_test[i,2], sd = bayes_test[i,3])
}
a = melt(coef_comparison)[,2:3]
b = pooled_ols$coefficients[28]
q = data.frame(matrix(nrow = length(rd_UPC), ncol = 2))
for(i in 1:length(tt_UPC)){
# UPC 별 linear regression
temp = lm(unit~., data = rd_train[rd_train$UPC %in% tt_UPC[i],c(response_variable, explanatory_variable)])
q[i,1] = tt_UPC[i]
q[i,2] = temp$coefficient[28]
if(i%%100==0){print(i)}
}
a = a %>% filter(Var2 %in% tt_UPC) #%>% mutate(grp = rep(c('TFS',	'Face It',	'Lovely Me:ex',	'Lovely Me:ex',	'Brow Master',	'TFS',	'TFS',	'미감수',	'Natural Sun',	'갈아만든',	'미감수',	'TFS'), each = 5000))
q = q %>% filter(X1 %in% tt_UPC)
#a = a %>% filter(Var2 != 31500200)
#q = q %>% filter(X1 != 31500200)
library(RColorBrewer)
ggplot() +
geom_boxplot(data = a, aes(x = factor(Var2), y = value, col = 'bayesian')) +
geom_point(data = q, aes(x = factor(X1), y = X2, col = 'SKU_ols'), size = 3, stroke = 0, shape = 16) +
geom_hline(aes(yintercept = b, col = 'pooled_ols')) +
#scale_fill_brewer(palette = 'Pastel2') +
#scale_color_brewer(palette = 'RdBu') +
#scale_color_manual(values = c('blue', 'red')) +
ylim(c(-2,5)) +
labs(title = '20%_discount parameter estimator from different regression models', fill = 'brand', colour = 'regression models') +
xlab('SKU')+
ylab('parameter') +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=45, hjust=1))
tt_UPC
#pooled_ols = lm(unit~., data = rd_train[,c(response_variable,explanatory_variable,brand,cat)])
tt_UPC = sample(t_UPC, 10)
bayes_test = cbind(bayes_brand_coef[,c(1,29)], bayes_brand_sd[,29])
coef_comparison  = matrix(ncol = nrow(bayes_test), nrow = 5000)
colnames(coef_comparison) = bayes_test[,1]
for(i in 1:ncol(coef_comparison)){
coef_comparison[,i] = rnorm(n = 5000, mean = bayes_test[i,2], sd = bayes_test[i,3])
}
a = melt(coef_comparison)[,2:3]
b = pooled_ols$coefficients[28]
q = data.frame(matrix(nrow = length(rd_UPC), ncol = 2))
for(i in 1:length(tt_UPC)){
# UPC 별 linear regression
temp = lm(unit~., data = rd_train[rd_train$UPC %in% tt_UPC[i],c(response_variable, explanatory_variable)])
q[i,1] = tt_UPC[i]
q[i,2] = temp$coefficient[28]
if(i%%100==0){print(i)}
}
a = a %>% filter(Var2 %in% tt_UPC) #%>% mutate(grp = rep(c('TFS',	'Face It',	'Lovely Me:ex',	'Lovely Me:ex',	'Brow Master',	'TFS',	'TFS',	'미감수',	'Natural Sun',	'갈아만든',	'미감수',	'TFS'), each = 5000))
q = q %>% filter(X1 %in% tt_UPC)
#a = a %>% filter(Var2 != 31500200)
#q = q %>% filter(X1 != 31500200)
library(RColorBrewer)
ggplot() +
geom_boxplot(data = a, aes(x = factor(Var2), y = value, col = 'bayesian')) +
geom_point(data = q, aes(x = factor(X1), y = X2, col = 'SKU_ols'), size = 3, stroke = 0, shape = 16) +
geom_hline(aes(yintercept = b, col = 'pooled_ols')) +
#scale_fill_brewer(palette = 'Pastel2') +
#scale_color_brewer(palette = 'RdBu') +
#scale_color_manual(values = c('blue', 'red')) +
ylim(c(-2,5)) +
labs(title = '20%_discount parameter estimator from different regression models', fill = 'brand', colour = 'regression models') +
xlab('SKU')+
ylab('parameter') +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=45, hjust=1))
tt_UPC
miin = c(30400510,
30400511,
30400522,
30400519,
30400521,
30400516,
30400518,
30400513,
30400512,
30400515,
30400517,
30400520,
30400549,
30400550,
30400563
)
apply(MAPE_wk %>% filter(UPC %in% miin), 2, mean)
apply(MAPE_wk %>% filter(UPC %in% miin), 2, median)
MAPE_wk %>% filter(UPC %in% miin)
miin = c(34200600,
34200599,
34200601,
34200602,
34200603,
34200604,
34200605,
34200606,
34200607,
34200608,
34200609,
34200610,
34200863,
34200864,
34200866,
34200867
)
apply(MAPE_wk %>% filter(UPC %in% miin), 2, median)
MAPE_wk %>% filter(UPC %in% miin)
miin = c(34200131,
34200132,
34200140,
34200141,
34200142
)
apply(MAPE_wk %>% filter(UPC %in% miin), 2, median)
MAPE_wk %>% filter(UPC %in% miin)
apply(MAPE_wk %>% filter(UPC %in% miin), 2, mean)
miin = c(34200256,
34200257,
34200258,
34200259,
34200260,
34200261,
34200262,
34200389,
34200390,
34200392,
34200466,
34200882
)
apply(MAPE_wk %>% filter(UPC %in% miin), 2, mean)
apply(MAPE_wk %>% filter(UPC %in% miin), 2, median)
MAPE_wk %>% filter(UPC %in% miin)
tt_UPC
#pooled_ols = lm(unit~., data = rd_train[,c(response_variable,explanatory_variable,brand,cat)])
#tt_UPC = sample(t_UPC, 10)
bayes_test = cbind(bayes_brand_coef[,c(1,29)], bayes_brand_sd[,29])
coef_comparison  = matrix(ncol = nrow(bayes_test), nrow = 5000)
colnames(coef_comparison) = bayes_test[,1]
for(i in 1:ncol(coef_comparison)){
coef_comparison[,i] = rnorm(n = 5000, mean = bayes_test[i,2], sd = bayes_test[i,3])
}
a = melt(coef_comparison)[,2:3]
b = pooled_ols$coefficients[28]
q = data.frame(matrix(nrow = length(rd_UPC), ncol = 2))
for(i in 1:length(tt_UPC)){
# UPC 별 linear regression
temp = lm(unit~., data = rd_train[rd_train$UPC %in% tt_UPC[i],c(response_variable, explanatory_variable)])
q[i,1] = tt_UPC[i]
q[i,2] = temp$coefficient[28]
if(i%%100==0){print(i)}
}
a = a %>% filter(Var2 %in% tt_UPC) %>% mutate(grp = rep(c('A', 'B', 'B', 'A', 'B', 'C', 'B', 'D', 'E', 'F'), each = 5000))
q = q %>% filter(X1 %in% tt_UPC)
#a = a %>% filter(Var2 != 31500200)
#q = q %>% filter(X1 != 31500200)
library(RColorBrewer)
ggplot() +
geom_boxplot(data = a, aes(x = factor(Var2), y = value, fill = factor(grp), col = 'bayesian')) +
geom_point(data = q, aes(x = factor(X1), y = X2, col = 'SKU_ols'), size = 3, stroke = 0, shape = 16) +
geom_hline(aes(yintercept = b, col = 'pooled_ols')) +
scale_fill_brewer(palette = 'Pastel2') +
#scale_color_brewer(palette = 'RdBu') +
#scale_color_manual(values = c('blue', 'red')) +
ylim(c(-2,5)) +
labs(title = '20%_discount parameter estimator from different regression models', fill = 'brand', colour = 'regression models') +
xlab('SKU')+
ylab('parameter') +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=45, hjust=1))
#pooled_ols = lm(unit~., data = rd_train[,c(response_variable,explanatory_variable,brand,cat)])
#tt_UPC = sample(t_UPC, 10)
bayes_test = cbind(bayes_brand_coef[,c(1,29)], bayes_brand_sd[,29])
coef_comparison  = matrix(ncol = nrow(bayes_test), nrow = 5000)
colnames(coef_comparison) = bayes_test[,1]
for(i in 1:ncol(coef_comparison)){
coef_comparison[,i] = rnorm(n = 5000, mean = bayes_test[i,2], sd = bayes_test[i,3])
}
a = melt(coef_comparison)[,2:3]
b = pooled_ols$coefficients[28]
q = data.frame(matrix(nrow = length(rd_UPC), ncol = 2))
for(i in 1:length(tt_UPC)){
# UPC 별 linear regression
temp = lm(unit~., data = rd_train[rd_train$UPC %in% tt_UPC[i],c(response_variable, explanatory_variable)])
q[i,1] = tt_UPC[i]
q[i,2] = temp$coefficient[28]
if(i%%100==0){print(i)}
}
a = a %>% filter(Var2 %in% tt_UPC) %>% mutate(grp = rep(c('A', 'B', 'B', 'B', 'B', 'C', 'D', 'E', 'E', 'D'), each = 5000))
q = q %>% filter(X1 %in% tt_UPC)
#a = a %>% filter(Var2 != 31500200)
#q = q %>% filter(X1 != 31500200)
library(RColorBrewer)
ggplot() +
geom_boxplot(data = a, aes(x = factor(Var2), y = value, fill = factor(grp), col = 'bayesian')) +
geom_point(data = q, aes(x = factor(X1), y = X2, col = 'SKU_ols'), size = 3, stroke = 0, shape = 16) +
geom_hline(aes(yintercept = b, col = 'pooled_ols')) +
scale_fill_brewer(palette = 'Pastel2') +
#scale_color_brewer(palette = 'RdBu') +
#scale_color_manual(values = c('blue', 'red')) +
ylim(c(-2,5)) +
labs(title = '20%_discount parameter estimator from different regression models', fill = 'brand', colour = 'regression models') +
xlab('SKU')+
ylab('parameter') +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=45, hjust=1))
ggplot() +
geom_boxplot(data = a, aes(x = factor(Var2), y = value, fill = factor(grp), col = 'bayesian')) +
geom_point(data = q, aes(x = factor(X1), y = X2, col = 'SKU_ols'), size = 3, stroke = 0, shape = 16) +
geom_hline(aes(yintercept = b, col = 'pooled_ols')) +
scale_fill_brewer(palette = 'Pastel2') +
#scale_color_brewer(palette = 'RdBu') +
#scale_color_manual(values = c('blue', 'red')) +
ylim(c(-2,5)) +
labs(title = '20%_discount parameter estimator from different regression models', fill = 'brand', colour = 'regression models') +
xlab('SKU')+
ylab('parameter') +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=45, hjust=1))
ggplot() +
geom_boxplot(data = a, aes(x = factor(Var2), y = value, fill = factor(grp), col = 'bayesian')) +
geom_point(data = q, aes(x = factor(X1), y = X2, col = 'SKU_ols'), size = 3, stroke = 0, shape = 16) +
geom_hline(aes(yintercept = b, col = 'pooled_ols')) +
scale_fill_brewer(palette = 'Pastel2') +
#scale_color_brewer(palette = 'RdBu') +
#scale_color_manual(values = c('blue', 'red')) +
#ylim(c(-2,5)) +
labs(title = '20%_discount parameter estimator from different regression models', fill = 'brand', colour = 'regression models') +
xlab('SKU')+
ylab('parameter') +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=45, hjust=1))
ggplot() +
geom_boxplot(data = a, aes(x = factor(Var2), y = value, fill = factor(grp), col = 'bayesian')) +
geom_point(data = q, aes(x = factor(X1), y = X2, col = 'SKU_ols'), size = 3, stroke = 0, shape = 16) +
geom_hline(aes(yintercept = b, col = 'pooled_ols')) +
scale_fill_brewer(palette = 'Pastel2') +
#scale_color_brewer(palette = 'RdBu') +
#scale_color_manual(values = c('blue', 'red')) +
#ylim(c(-2,5)) +
labs(title = '20%_discount parameter estimator from different regression models', fill = 'brand', colour = 'regression models') +
xlab('SKU')+
ylab('parameter') +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=45, hjust=1))
ggplot() +
geom_boxplot(data = a, aes(x = factor(Var2), y = value, fill = factor(grp), col = 'bayesian')) +
geom_point(data = q, aes(x = factor(X1), y = X2, col = 'SKU_ols'), size = 3, stroke = 0, shape = 16) +
geom_hline(aes(yintercept = b, col = 'pooled_ols')) +
scale_fill_brewer(palette = 'Pastel2') +
#scale_color_brewer(palette = 'RdBu') +
#scale_color_manual(values = c('blue', 'red')) +
ylim(c(-2,4)) +
labs(title = '20%_discount parameter estimator from different regression models', fill = 'brand', colour = 'regression models') +
xlab('SKU')+
ylab('parameter') +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=45, hjust=1))
ggplot() +
geom_boxplot(data = a, aes(x = factor(Var2), y = value, fill = factor(grp), col = 'bayesian')) +
geom_point(data = q, aes(x = factor(X1), y = X2, col = 'SKU_ols'), size = 3, stroke = 0, shape = 16) +
geom_hline(aes(yintercept = b, col = 'pooled_ols')) +
scale_fill_brewer(palette = 'Pastel2') +
#scale_color_brewer(palette = 'RdBu') +
#scale_color_manual(values = c('blue', 'red')) +
ylim(c(-2,4)) +
labs(title = '20%_discount parameter estimator from different regression models', fill = 'brand', colour = 'regression models') +
xlab('SKU')+
ylab('parameter') +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=45, hjust=1))
MAPE_wk_CNS
write.csv(MAPE_CNS, 'MAPE_CNS.csv')
write.csv(MAPE_wk_CNS, 'MAPE_wk_CNS.csv')
getwd()
apply(MAPE_wk %>% filter(UPC %in% miin), 2, median)
load("D:/CNS_DATA/Final_accessment_366.RData")
MAPE_day
melt(MAPE_day[,c(2,4:7)])
ggplot(melt(MAPE_day[,c(2,4:7)])) +
geom_boxplot(aes(x = variable, y = value))
ggplot(melt(MAPE_day[,c(2,4:7)])) +
geom_boxplot(aes(x = variable, y = value)) +
ylim(c(0,1))
ggplot(melt(MAPE_day[,c(2,4:7)])) +
geom_boxplot(aes(x = variable, y = value)) +
ylim(c(0,0.5))
MAPE_CNS
MAPE_day_CNS
ggplot(melt(MAPE_day[,c(2,4:7)])) +
geom_boxplot(aes(x = variable, y = value)) +
ylim(c(0,0.5)) +
geom_text(x = variable, y = apply(MAPE_day[,c(2,4:7)],2,median))
ggplot(melt(MAPE_day[,c(2,4:7)])) +
geom_boxplot(aes(x = variable, y = value)) +
ylim(c(0,0.5)) +
geom_text(x = 1:5, y = apply(MAPE_day[,c(2,4:7)],2,median))
ggplot(melt(MAPE_day[,c(2,4:7)])) +
geom_boxplot(aes(x = variable, y = value)) +
ylim(c(0,0.5)) +
geom_text(x = 1:5, y = apply(MAPE_day[,c(2,4:7)],2,median), label = apply(MAPE_day[,c(2,4:7)],2,median))
apply(MAPE_day[,c(2,4:7)],2,median)
apply(MAPE_day[,c(2,4:7)],2,median, na.rm=T)
ggplot(melt(MAPE_day[,c(2,4:7)])) +
geom_boxplot(aes(x = variable, y = value)) +
ylim(c(0,0.5)) +
geom_text(x = 1:5, y = apply(MAPE_day[,c(2,4:7)],2,median, na.rm=T), label = apply(MAPE_day[,c(2,4:7)],2,median, na.rm=T))
ggplot(melt(MAPE_day[,c(2,4:7)])) +
geom_boxplot(aes(x = variable, y = value)) +
ylim(c(0,0.5)) +
geom_text(y = apply(MAPE_day[,c(2,4:7)],2,median, na.rm=T), label = apply(MAPE_day[,c(2,4:7)],2,median, na.rm=T))
ggplot(melt(MAPE_day[,c(2,4:7)])) +
geom_boxplot(aes(x = variable, y = value)) +
ylim(c(0,0.5)) +
geom_text(x = 1:5, y = apply(MAPE_day[,c(2,4:7)],2,median, na.rm=T), label = apply(MAPE_day[,c(2,4:7)],2,median, na.rm=T))
ggplot(melt(MAPE_day[,c(2,4:7)])) +
geom_boxplot(aes(x = variable, y = value, label = apply(MAPE_day[,c(2,4:7)],2,median, na.rm=T) )) +
ylim(c(0,0.5))
ggplot(melt(MAPE_day[,c(2,4:7)])) +
geom_boxplot(aes(x = variable, y = value)) +
ylim(c(0,0.5))+
geom_text(data=data.frame(), aes(x=names(meds), y=meds, label=apply(MAPE_day[,c(2,4:7)],2,median, na.rm=T)), col='red', size=10)
ggplot(melt(MAPE_day[,c(2,4:7)])) +
geom_boxplot(aes(x = variable, y = value)) +
ylim(c(0,0.5))+
geom_text(data=data.frame(), aes(x=names(colnames(MAPE_day[,c(2,4:7)])), y=apply(MAPE_day[,c(2,4:7)],2,median, na.rm=T), label=apply(MAPE_day[,c(2,4:7)],2,median, na.rm=T)), col='red', size=10)
ggplot(melt(MAPE_day[,c(2,4:7)])) +
geom_boxplot(aes(x = variable, y = value)) +
ylim(c(0,0.5))+
geom_text(aes(x=names(colnames(MAPE_day[,c(2,4:7)])), y=apply(MAPE_day[,c(2,4:7)],2,median, na.rm=T), label=apply(MAPE_day[,c(2,4:7)],2,median, na.rm=T)), col='red', size=10)
colnames(MAPE_day[,c(2,4:7)])
apply(MAPE_day[,c(2,4:7)],2,median, na.rm=T)
apply(MAPE_day[,c(2,4:7)],2,median, na.rm=T)
ggplot(melt(MAPE_day[,c(2,4:7)])) +
geom_boxplot(aes(x = variable, y = value)) +
ylim(c(0,0.5))+
geom_text(aes(x=names(colnames(MAPE_day[,c(2,4:7)])), y=apply(MAPE_day[,c(2,4:7)],2,median, na.rm=T), label=apply(MAPE_day[,c(2,4:7)],2,median, na.rm=T), col='red', size=10))
ggplot(melt(MAPE_day[,c(2,4:7)])) +
geom_boxplot(aes(x = variable, y = value)) +
ylim(c(0,0.5))+
geom_text(data=data.frame(), aes(x=names(colnames(MAPE_day[,c(2,4:7)])), y=apply(MAPE_day[,c(2,4:7)],2,median, na.rm=T), label=apply(MAPE_day[,c(2,4:7)],2,median, na.rm=T)), col='red', size=10)
ggplot(melt(MAPE_day[,c(2,4:7)])) +
geom_boxplot(aes(x = variable, y = value)) +
ylim(c(0,0.5))
ggplot(melt(MAPE_day[,c(2,4:7)])) +
geom_boxplot(aes(x = variable, y = value, fill = factor(c('ols', 'bayes', 'bayes','bayes','bayes')))) +
ylim(c(0,0.5))+
xlab('Models') +
ylab('Percentage error')
factor(c('ols', 'bayes', 'bayes','bayes','bayes'))
melt(MAPE_day[,c(2,4:7)]
melt(MAPE_day[,c(2,4:7)])
melt(MAPE_day[,c(2,4:7)])
ggplot(melt(MAPE_day[,c(2,4:7)]) %>% mutate(grp = rep(c('ols','bayes','bayes','bayes','bayes', each=3065/5)))) +
geom_boxplot(aes(x = variable, y = value, fill = factor(grp))) +
ylim(c(0,0.5))+
xlab('Models') +
ylab('Percentage error')
melt(MAPE_day[,c(2,4:7)]) %>% mutate(grp = rep(c('ols','bayes','bayes','bayes','bayes', each=3065/5)))
rep(c('ols','bayes','bayes','bayes','bayes', each=3065/5)
rep(c('ols','bayes','bayes','bayes','bayes', each=3065/5))
rep(c('ols','bayes','bayes','bayes','bayes', each=3065/5))
ggplot(melt(MAPE_day[,c(2,4:7)]) %>% mutate(grp = rep(c('ols','bayes','bayes','bayes','bayes'),each=3065/5))) +
geom_boxplot(aes(x = variable, y = value, fill = factor(grp))) +
ylim(c(0,0.5))+
xlab('Models') +
ylab('Percentage error')
ggplot(melt(MAPE_day[,c(2,4:7)]) %>% mutate(grp = rep(c('ols','bayes','bayes','bayes','bayes'),each=3065/5))) +
geom_boxplot(aes(x = variable, y = value, fill = factor(grp))) +
ylim(c(0.1,0.4))+
xlab('Models') +
ylab('Percentage error')
ggplot(melt(MAPE_day[,c(2,4:7)]) %>% mutate(grp = rep(c('ols','bayes','bayes','bayes','bayes'),each=3065/5))) +
geom_boxplot(aes(x = variable, y = value, fill = factor(grp))) +
ylim(c(0.1,0.3))+
xlab('Models') +
ylab('Percentage error')
ggplot(melt(MAPE_day[,c(2,4:7)]) %>% mutate(grp = rep(c('ols','bayes','bayes','bayes','bayes'),each=3065/5))) +
geom_boxplot(aes(x = variable, y = value, fill = factor(grp))) +
ylim(c(0.1,0.3))+
xlab('Models') +
ylab('Percentage error') +
lab(fill = 'models')
ggplot(melt(MAPE_day[,c(2,4:7)]) %>% mutate(grp = rep(c('ols','bayes','bayes','bayes','bayes'),each=3065/5))) +
geom_boxplot(aes(x = variable, y = value, fill = factor(grp))) +
ylim(c(0.1,0.3))+
xlab('Models') +
ylab('Percentage error') +
labels(fill = 'models')
ggplot(melt(MAPE_day[,c(2,4:7)]) %>% mutate(grp = rep(c('ols','bayes','bayes','bayes','bayes'),each=3065/5))) +
geom_boxplot(aes(x = variable, y = value, fill = factor(grp))) +
ylim(c(0.1,0.3))+
xlab('Models') +
ylab('Percentage error') +
guides(fill = 'models')
ggplot(melt(MAPE_day[,c(2,4:7)]) %>% mutate(grp = rep(c('ols','bayes','bayes','bayes','bayes'),each=3065/5))) +
geom_boxplot(aes(x = variable, y = value, fill = factor(grp))) +
ylim(c(0.1,0.3))+
xlab('Models') +
ylab('Percentage error') +
guides(fill = 'models')
ggplot(melt(MAPE_day[,c(2,4:7)]) %>% mutate(grp = rep(c('ols','bayes','bayes','bayes','bayes'),each=3065/5))) +
geom_boxplot(aes(x = variable, y = value, fill = factor(grp))) +
ylim(c(0.1,0.3))+
xlab('Models') +
ylab('Percentage error') +
labs(fill = 'models')
apply(MAPE_day[,c(2,4:7)],2,median, na.rm=T
)
ggplot(melt(MAPE_wk[,c(2,4:7)]) %>% mutate(grp = rep(c('ols','bayes','bayes','bayes','bayes'),each=3065/5))) +
geom_boxplot(aes(x = variable, y = value, fill = factor(grp))) +
ylim(c(0.1,0.3))+
xlab('Models') +
ylab('Percentage error') +
labs(fill = 'models')
ggplot(melt(MAPE[,c(2,4:7)]) %>% mutate(grp = rep(c('ols','bayes','bayes','bayes','bayes'),each=3065/5))) +
geom_boxplot(aes(x = variable, y = value, fill = factor(grp))) +
ylim(c(0.1,0.3))+
xlab('Models') +
ylab('Percentage error') +
labs(fill = 'models')
ggplot(melt(MAPE_day[,c(2,4:7)]) %>% mutate(grp = rep(c('ols','bayes','bayes','bayes','bayes'),each=3065/5))) +
geom_boxplot(aes(x = variable, y = value, fill = factor(grp))) +
ylim(c(0.1,0.3))+
xlab('Models') +
ylab('Percentage error') +
labs(fill = 'models')
apply(MAPE_day[,c(2,4:7)],2,median, na.rm=T)
ggplot(melt(MAPE_day[,c(2,4:7)]) %>% mutate(grp = rep(c('ols','bayes','bayes','bayes','bayes'),each=3065/5))) +
geom_boxplot(aes(x = variable, y = value, fill = factor(grp))) +
#ylim(c(0.1,0.3))+
xlab('Models') +
ylab('Percentage error') +
labs(fill = 'models')
MAPE_day
apply(MAPE_day[apply(MAPE_day[2:7],1,sum)<6,c(2,4:7)],2,median, na.rm=T)
apply(MAPE_day[apply(MAPE_day[2:7],1,sum)<5,c(2,4:7)],2,median, na.rm=T)
apply(MAPE_day[apply(MAPE_day[2:7],1,sum)<3,c(2,4:7)],2,median, na.rm=T)
apply(MAPE_day[apply(MAPE_day[2:7],1,sum)<3,c(2,4:7)],1.5,median, na.rm=T)
apply(MAPE_day[apply(MAPE_day[2:7],1,sum)<1.5,c(2,4:7)],2,median, na.rm=T)
apply(MAPE_day[,c(2,4:7)],2,median, na.rm=T)
apply(MAPE_wk[,c(2,4:7)],2,median, na.rm=T)
ggplot(melt(MAPE_wk[,c(2,4:7)]) %>% mutate(grp = rep(c('ols','bayes','bayes','bayes','bayes'),each=3065/5))) +
geom_boxplot(aes(x = variable, y = value, fill = factor(grp))) +
ylim(c(0.1,0.3))+
xlab('Models') +
ylab('Percentage error') +
labs(fill = 'models')
ggplot(melt(MAPE_wk[,c(2,4:7)]) %>% mutate(grp = rep(c('ols','bayes','bayes','bayes','bayes'),each=3065/5))) +
geom_boxplot(aes(x = variable, y = value, fill = factor(grp))) +
ylim(c(0,1))+
xlab('Models') +
ylab('Percentage error') +
labs(fill = 'models')
ggplot(melt(MAPE_wk[,c(2,4:7)]) %>% mutate(grp = rep(c('ols','bayes','bayes','bayes','bayes'),each=3065/5))) +
geom_boxplot(aes(x = variable, y = value, fill = factor(grp))) +
ylim(c(0,.5))+
xlab('Models') +
ylab('Percentage error') +
labs(fill = 'models')
ggplot(melt(MAPE_wk[,c(2,4:7)]) %>% mutate(grp = rep(c('ols','bayes','bayes','bayes','bayes'),each=3065/5))) +
geom_boxplot(aes(x = variable, y = value, fill = factor(grp))) +
ylim(c(0,.5))+
xlab('Models') +
ylab('Percentage error') +
labs(fill = 'models')
ggplot(melt(MAPE_wk[,c(2,4:7)]) %>% mutate(grp = rep(c('ols','bayes','bayes','bayes','bayes'),each=3065/5))) +
geom_boxplot(aes(x = variable, y = value, fill = factor(grp))) +
ylim(c(0,1))+
xlab('Models') +
ylab('Percentage error') +
labs(fill = 'models')
apply(MAPE_wk[,c(2,4:7)],2,median, na.rm=T)
MAPE
MAPE
