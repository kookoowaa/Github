test_group = validation_group[validation_group$frequency>4 & validation_group$FreqM>0.18,]
dim(test_group)
test_purchase = test_group[test_group$purchase == 1,]
dim(test_purchase)
summary(test_purchase)
## 19%
test_group = validation_group[validation_group$frequency>4 & validation_group$FreqM>0.13,]
dim(test_group)
test_purchase = test_group[test_group$purchase == 1,]
dim(test_purchase)
summary(test_purchase)
attach(validation_group)
mail_color = rep('red',4000)
mail_color[purchase ==0] = 'yellow'
plot3d(frequency, recency, FreqM, col = mail_color, pch= 20)
### 구매 빈도가 높던 사람이 최근에도 구매를 했으면 로열티가 있고, 우편에 응답할 확률도 높ㅇ
## 19%
test_group = validation_group[validation_group$recency<20 & validation_group$FreqM>0.13,]
dim(test_group)
test_purchase = test_group[test_group$purchase == 1,]
dim(test_purchase)
summary(test_purchase)
## 19%
test_group = validation_group[validation_group$recency<20 & validation_group$FreqM>0.2,]
dim(test_group)
test_purchase = test_group[test_group$purchase == 1,]
dim(test_purchase)
summary(test_purchase)
## 19%
test_group = validation_group[validation_group$recency<20 & validation_group$FreqM>0.18,]
dim(test_group)
test_purchase = test_group[test_group$purchase == 1,]
dim(test_purchase)
summary(test_purchase)
attach(validation_group)
mail_color = rep('red',2000)
mail_color[purchase ==0] = 'yellow'
plot3d(frequency, recency, FreqM, col = mail_color, pch= 20)
### 구매 빈도가 높던 사람이 최근에도 구매를 했으면 로열티가 있고, 우편에 응답할 확률도 높ㅇ
## 19%
test_group = validation_group[validation_group$recency<20 & validation_group$frequency>5,]
dim(test_group)
test_purchase = test_group[test_group$purchase == 1,]
dim(test_purchase)
summary(test_purchase)
## 19%
test_group = validation_group[validation_group$recency<20 & validation_group$frequency>6,]
dim(test_group)
test_purchase = test_group[test_group$purchase == 1,]
dim(test_purchase)
summary(test_purchase)
## 19%
test_group = validation_group[validation_group$recency<20 & validation_group$frequency>4,]
dim(test_group)
test_purchase = test_group[test_group$purchase == 1,]
dim(test_purchase)
summary(test_purchase)
## 19%
test_group = validation_group[validation_group$recency<20 & validation_group$frequency>6,]
dim(test_group)
test_purchase = test_group[test_group$purchase == 1,]
dim(test_purchase)
summary(test_purchase)
## 19%
test_group = validation_group[validation_group$recency<20 & validation_group$frequency>4,]
dim(test_group)
test_purchase = test_group[test_group$purchase == 1,]
dim(test_purchase)
summary(test_purchase)
## 19%
test_group = validation_group[validation_group$recency<20 & validation_group$frequency>3,]
dim(test_group)
test_purchase = test_group[test_group$purchase == 1,]
dim(test_purchase)
summary(test_purchase)
## 19%
test_group = validation_group[validation_group$recency<22 & validation_group$frequency>3,]
dim(test_group)
test_purchase = test_group[test_group$purchase == 1,]
dim(test_purchase)
summary(test_purchase)
## 19%
test_group = validation_group[validation_group$recency<18 & validation_group$frequency>3,]
dim(test_group)
test_purchase = test_group[test_group$purchase == 1,]
dim(test_purchase)
summary(test_purchase)
## 19%
test_group = validation_group[validation_group$recency<16 & validation_group$frequency>3,]
dim(test_group)
test_purchase = test_group[test_group$purchase == 1,]
dim(test_purchase)
summary(test_purchase)
## 19%
test_group = validation_group[validation_group$recency<16 & validation_group$frequency>4,]
dim(test_group)
test_purchase = test_group[test_group$purchase == 1,]
dim(test_purchase)
summary(test_purchase)
## 19%
test_group = validation_group[validation_group$recency<16 & validation_group$frequency>2,]
dim(test_group)
test_purchase = test_group[test_group$purchase == 1,]
dim(test_purchase)
summary(test_purchase)
## 19%
test_group = validation_group[validation_group$recency<14,]
dim(test_group)
test_purchase = test_group[test_group$purchase == 1,]
dim(test_purchase)
summary(test_purchase)
## 19%
test_group = validation_group[validation_group$recency<13,]
dim(test_group)
test_purchase = test_group[test_group$purchase == 1,]
dim(test_purchase)
summary(test_purchase)
## 19%
test_group = validation_group[validation_group$recency<10,]
dim(test_group)
test_purchase = test_group[test_group$purchase == 1,]
dim(test_purchase)
summary(test_purchase)
## 19%
test_group = validation_group[validation_group$recency<16,]
dim(test_group)
test_purchase = test_group[test_group$purchase == 1,]
dim(test_purchase)
summary(test_purchase)
## 19%
test_group = validation_group[validation_group$recency<16 & frequency>2,]
dim(test_group)
test_purchase = test_group[test_group$purchase == 1,]
dim(test_purchase)
summary(test_purchase)
## 15%
validation1 = validation_group[validation_group$recency<16 & frequency>2,]
dim(validation1)
validation2 = validation1[validation1$purchase == 1,]
dim(validation2)
rm(list=ls())
library(xlsx)
library(rgl)
library(dplyr)
mailorder = read.xlsx2('d:/github/r/database_marketing/hw2/mailorder.xls', 1)
## Factor > numericd
mailorder$id = as.numeric(as.character(mailorder$id))
mailorder$monetary = as.numeric(as.character(mailorder$monetary))
mailorder$recency = as.numeric(as.character(mailorder$recency))
mailorder$frequency = as.numeric(as.character(mailorder$frequency))
mailorder$duration = as.numeric(as.character(mailorder$duration))
mailorder$purchase = as.numeric(as.character(mailorder$purchase))
test_group = mailorder[1:2000,]
valid_group = mailorder[2001:4000,]
## 15%
validation1 = valid_group[valid_group$recency<16 & frequency>2,]
dim(validation1)
validation2 = validation1[validation1$purchase == 1,]
dim(validation2)
## 1번 - 500명중에 hit-rate
idx = sample(1:2000, size = 500)
mail_sample = mailorder[idx,]
cat('500명 중 구매한 인원 수')
dim(mail_sample[mail_sample$purchase==1,])[1]
cat('맞춘 확률')
dim(mail_sample[mail_sample$purchase==1,])[1]/500
## 15%  Tree model
validation1 = valid_group[valid_group$recency<16 & frequency>2,]
dim(validation1)
validation2 = validation1[validation1$purchase == 1,]
dim(validation2)
cat(dim(validation2)[1]/dim(validation1)[1])
## 15%  Tree model
validation1 = valid_group[valid_group$recency<16 & frequency>2,]
dim(validation1)
validation2 = validation1[validation1$purchase == 1,]
dim(validation2)
cat('맞춘 확률', dim(validation2)[1]/dim(validation1)[1])
mailorder = read.xlsx2('d:/github/r/database_marketing/hw2/mailorder.xls', 1)
## Factor > numericd
mailorder$id = as.numeric(as.character(mailorder$id))
mailorder$monetary = as.numeric(as.character(mailorder$monetary))
mailorder$recency = as.numeric(as.character(mailorder$recency))
mailorder$frequency = as.numeric(as.character(mailorder$frequency))
mailorder$duration = as.numeric(as.character(mailorder$duration))
mailorder$purchase = as.numeric(as.character(mailorder$purchase))
FreqM = mailorder$frequency/mailorder$duration
mailorder = cbind(mailorder,FreqM)
test_group = mailorder[1:2000,]
valid_group = mailorder[2001:4000,]
## 1번 - 500명중에 hit-rate
idx = sample(1:2000, size = 500)
mail_sample = mailorder[idx,]
cat('500명 중 구매한 인원 수')
dim(mail_sample[mail_sample$purchase==1,])[1]
cat('맞춘 확률')
dim(mail_sample[mail_sample$purchase==1,])[1]/500
## 1번 - 500명중에 hit-rate
idx = sample(1:2000, size = 500)
mail_sample = mailorder[idx,]
cat('500명 중 구매한 인원 수')
dim(mail_sample[mail_sample$purchase==1,])[1]
cat('맞춘 확률')
dim(mail_sample[mail_sample$purchase==1,])[1]/500
## 4번 -
simple_lm = lm(purchase~recency+frequency+monetary, data= test_group)
## 4번 -
simple_lm = lm(purchase~recency+frequency+monetary, data= test_group)
summary(simple_lm)
predict(simple_lm, newdata = test_group)
lm_valid = predict(simple_lm, newdata = test_group)
sort(lm_valid)
sort(lm_valid)[1501:2000]
lm_select = valid_group[names(lm_valid)]
## 4번 -
simple_lm = lm(purchase~recency+frequency+monetary, data= test_group)
summary(simple_lm)
lm_valid = predict(simple_lm, newdata = valid_group)
sort(lm_valid)[1501:2000]
lm_select = valid_group[names(lm_valid)]
valid_loc = sort(lm_valid)[1501:2000]
names(lm_valid)
names(valid_loc)
lm_select = valid_group[names(valid_loc)]
lm_select = valid_group[as.numeric(names(valid_loc))]
as.numeric(names(valid_loc))
lm_select = valid_group[as.numeric(names(valid_loc)),]
dim(lm_select[lm_select$purchase==1])
dim(lm_select[lm_select$purchase==1,])
lm_select
lm_valid
valid_loc
valid_loc = names(sort(lm_valid)[1501:2000])
valid_loc
valid_loc = as.numeric(names(sort(lm_valid)[1501:2000]))
valid_group[valid_loc,]
valid_group
valid_group[2001]
valid_group[,2001]
valid_group[2001,]
valid_group$2001
row.names(valid_group)
valid_loc = names(sort(lm_valid)[1501:2000])
grep(valid_loc, row.names(valid_group))
sort(lm_valid)[1501:2000]
lm_valid
names(lm_valid) = c(12002:12002+1999)
valid_loc = names(sort(lm_valid)[1501:2000])
valid_loc
names(lm_valid)
names(lm_valid) = c(12002:14001)
names(lm_valid)
valid_loc = names(sort(lm_valid)[1501:2000])
lm_select = valid_group[valid_group$id==valid_loc]
lm_select = valid_group[valid_group$id==valid_loc,]
dim(lm_select[lm_select$purchase==1,])
lm_select
valid_loc
valid_group$id==valid_loc
grep(valid_loc, row.names(valid_group))
?which
?in
?grep
valid_loc
?predict
lm_valid = predict(simple_lm, newdata = valid_group, type = 'response)
names(lm_valid) = c(12002:14001)
valid_loc = names(sort(lm_valid)[1501:2000])
lm_select = valid_group[valid_group$id==valid_loc,]
dim(lm_select[lm_select$purchase==1,])
lm_valid
lm_valid = predict(simple_lm, newdata = valid_group, type = 'response')
lm_valid = predict(simple_lm, newdata = valid_group, type = "response"")
names(lm_valid) = c(12002:14001)
valid_loc = names(sort(lm_valid)[1501:2000])
lm_select = valid_group[valid_group$id==valid_loc,]
dim(lm_select[lm_select$purchase==1,])
lm_valid = predict(simple_lm, newdata = valid_group, type = "response")
simple_lm = lm(purchase~recency+frequency+monetary, data= test_group)
lm_valid = predict(simple_lm, newdata = valid_group, type = "response")
lm_valid = predict(simple_lm, newdata = valid_group, type = "response")
lm_valid = predict(simple_lm, newdata = valid_group)
simple_lm = lm(purchase~recency+frequency+monetary, data= test_group)
mailorder = read.xlsx2('d:/github/r/database_marketing/hw2/mailorder.xls', 1)
library(xlsx)
library(rgl)
library(dplyr)
mailorder = read.xlsx2('d:/github/r/database_marketing/hw2/mailorder.xls', 1)
## Factor > numericd
mailorder$id = as.numeric(as.character(mailorder$id))
mailorder$monetary = as.numeric(as.character(mailorder$monetary))
mailorder$recency = as.numeric(as.character(mailorder$recency))
mailorder$frequency = as.numeric(as.character(mailorder$frequency))
mailorder$duration = as.numeric(as.character(mailorder$duration))
mailorder$purchase = as.numeric(as.character(mailorder$purchase))
FreqM = mailorder$frequency/mailorder$duration
mailorder = cbind(mailorder,FreqM)
test_group = mailorder[1:2000,]
valid_group = mailorder[2001:4000,]
simple_lm = lm(purchase~recency+frequency+monetary, data= test_group)
lm_valid = predict(simple_lm, newdata = valid_group, type = "response")
summary(sort(lm_valid)[1501:2000])
valid_result = rep(1,2000)
valid_result
summary(sort(lm_valid)[1501:2000])
value_result[sort(lm_valid)[1501:2000]<0.1082] = 0
valid_result[sort(lm_valid)[1501:2000]<0.1082] = 0
table(valid_result)
valid_result[sort(lm_valid)<0.1082] = 0
table(valid_result)
table(valid_result, test_group$purchase)
(41)/459
simple_lm = lm(purchase~recency+frequency+monetary, data= test_group)
summary(simple_lm)
lm_valid = predict(simple_lm, newdata = valid_group, type = "response")
summary(sort(lm_valid)[1501:2000])
valid_result = rep(1,2000)
valid_result[sort(lm_valid)<0.1082] = 0
table(valid_result, test_group$purchase)
table(valid_result, valid_group$purchase)
str(table(valid_result, valid_group$purchase))
a = table(valid_result, valid_group$purchase)
a[2,1]
sum(a[2,])
a[2,2]/sum(a[2,])
a[2,2]/sum(a[2,])
a
table(valid_group$purchase)
a
38/124
simple_lm = glm(purchase~recency+frequency+monetary, data= test_group, family='bonimial')
simple_lm = glm(purchase~recency+frequency+monetary, data= test_group, family='binomial')
summary(simple_lm)
lm_valid = predict(simple_lm, newdata = valid_group, type = "response")
summary(sort(lm_valid)[1501:2000])
valid_result = rep(1,2000)
summary(sort(lm_valid)[1501:2000])
valid_result[sort(lm_valid)<0.1021] = 0
a = table(valid_result, valid_group$purchase)
a[2,2]/sum(a[2,])
a
valid_result[sort(lm_valid)<0.1022] = 0
a = table(valid_result, valid_group$purchase)
a[2,2]/sum(a[2,])
a
summary(sort(lm_valid)[1501:2000])
valid_result[sort(lm_valid)<0.1020] = 0
a[2,2]/sum(a[2,])
a
table(valid_group$purchase)
162/500
summary(sort(lm_valid)[1501:2000])
simple_lm = lm(purchase~recency+frequency+monetary, data= test_group)
summary(simple_lm)
summary(sort(lm_valid)[1501:2000])
lm_valid = predict(simple_lm, newdata = valid_group, type = "response")
summary(sort(lm_valid)[1501:2000])
valid_result[sort(lm_valid)<0.1081] = 0
a
a = table(valid_result, valid_group$purchase)
a
summary(sort(lm_valid)[1501:2000])
valid_result = rep(1,2000)
valid_result[sort(lm_valid)<0.1082] = 0
a = table(valid_result, valid_group$purchase)
a[2,2]/sum(a[2,])
a
tree_test = valid_group[valid_group$recency<16 & frequency>2,]
tree_test = valid_group[valid_group$recency<16 & frequency>2,]
tree_test = valid_group[valid_group$recency<16 & valid_group$frequency>2,]
## Tree model assumption
tree_test = valid_group[valid_group$recency<16 & valid_group$frequency>2,]
dim(tree_test)
tree_purchase = tree_test[validation1$purchase == 1,]
tree_purchase = tree_test[tree_test$purchase == 1,]
dim(tree_purchase)
cat('맞춘 확률', dim(tree_purchase)[1]/dim(tree_test)[1])
rm(list=ls())
gc()
library(xlsx)
library(rgl)
library(dplyr)
mailorder = read.xlsx2('d:/github/r/database_marketing/hw2/mailorder.xls', 1)
## Factor > numericd
mailorder$id = as.numeric(as.character(mailorder$id))
mailorder$monetary = as.numeric(as.character(mailorder$monetary))
mailorder$recency = as.numeric(as.character(mailorder$recency))
mailorder$frequency = as.numeric(as.character(mailorder$frequency))
mailorder$duration = as.numeric(as.character(mailorder$duration))
mailorder$purchase = as.numeric(as.character(mailorder$purchase))
FreqM = mailorder$frequency/mailorder$duration
mailorder = cbind(mailorder,FreqM)
test_group = mailorder[1:2000,]
valid_group = mailorder[2001:4000,]
### 탐색적 자료분ㅅ
attach(validation_group)
### 탐색적 자료분ㅅ
attach(valid_group)
mail_color = rep('red',2000)
mail_color[purchase ==0] = 'yellow'
plot3d(frequency, recency, FreqM, col = mail_color, pch= 20)
### 구매 빈도가 높던 사람이 최근에도 구매를 했으면 로열티가 있고, 우편에 응답할 확률도 높음
### monetary 영향 없음, recency 영향 높음
## 1번 - 500명중에 hit-rate 8.4%
idx = sample(1:2000, size = 500)
mail_sample = mailorder[idx,]
cat('500명 중 구매한 인원 수')
dim(mail_sample[mail_sample$purchase==1,])[1]
cat('맞춘 확률')
dim(mail_sample[mail_sample$purchase==1,])[1]/500
Sys.getlocale()
Sys.setlocale(,'English')
## 1번 - 500명중에 hit-rate 8.4%
idx = sample(1:2000, size = 500)
mail_sample = mailorder[idx,]
cat('500명 중 구매한 인원 수')
dim(mail_sample[mail_sample$purchase==1,])[1]
cat('맞춘 확률')
dim(mail_sample[mail_sample$purchase==1,])[1]/500
### 탐색적 자료분ㅅ
attach(valid_group)
mail_color = rep('red',2000)
mail_color[purchase ==0] = 'yellow'
plot3d(frequency, recency, FreqM, col = mail_color, pch= 20)
### 구매 빈도가 높던 사람이 최근에도 구매를 했으면 로열티가 있고, 우편에 응답할 확률도 높음
### monetary 영향 없음, recency 영향 높음
## 4번 - 7.6%
simple_lm = lm(purchase~recency+frequency+monetary, data= test_group)
summary(simple_lm)
lm_valid = predict(simple_lm, newdata = valid_group, type = "response")
summary(sort(lm_valid)[1501:2000])
valid_result = rep(1,2000)
valid_result[sort(lm_valid)<0.1082] = 0
a = table(valid_result, valid_group$purchase)
a[2,2]/sum(a[2,])
a
table(valid_group$purchase)
########################### prob
## Tree model assumption - 14.8%
tree_test = valid_group[valid_group$recency<16 & valid_group$frequency>2,]
dim(tree_test)
tree_purchase = tree_test[tree_test$purchase == 1,]
dim(tree_purchase)
cat('맞춘 확률', dim(tree_purchase)[1]/dim(tree_test)[1])
simple_lm = lm(purchase~recency+frequency, data= test_group)
summary(simple_lm)
lm_valid = predict(simple_lm, newdata = valid_group, type = "response")
summary(sort(lm_valid)[1501:2000])
valid_result = rep(1,2000)
valid_result[sort(lm_valid)<0.1082] = 0
a = table(valid_result, valid_group$purchase)
a[2,2]/sum(a[2,])
a
table(valid_group$purchase)
tree_purchase
table(tree_test$purchase, valid_group$purchase)
valid_result[lm_valid<0.1082] = 0
a = table(valid_result, valid_group$purchase)
a[2,2]/sum(a[2,])
a
tree_result = rep(0,2000)
tree_result[valid_group$recency<16 & valid_group$frequency>2] = 1
table(tree_result, valid_group$purchase)
a = table(tree_result, valid_group$purchase)
a[2,2]/sum(a[2,])
##
simple_lm = lm(purchase~recency+FreqM, data= test_group)
summary(simple_lm)
lm_valid = predict(simple_lm, newdata = valid_group, type = "response")
summary(sort(lm_valid)[1501:2000])
valid_result = rep(1,2000)
valid_result[sort(lm_valid)<0.1082] = 0
a = table(valid_result, valid_group$purchase)
a[2,2]/sum(a[2,])
a
########################### prob
summary(sort(lm_valid)[1501:2000])
## 4번 - 9.8%
simple_lm = lm(purchase~recency+frequency+monetary, data= test_group)
summary(simple_lm)
lm_valid = predict(simple_lm, newdata = valid_group, type = "response")
summary(sort(lm_valid)[1501:2000])
valid_result = rep(1,2000)
valid_result[lm_valid<0.1037] = 0
a = table(valid_result, valid_group$purchase)
a[2,2]/sum(a[2,])
a
table(valid_group$purchase)
########################### prob
table(valid_result)
summary(sort(lm_valid)[1501:2000])
valid_result[lm_valid<0.1083] = 0
table(valid_result)
valid_result[lm_valid<0.1081] = 0
table(valid_result)
summary(sort(lm_valid)[1501:2000])
valid_result = rep(1,2000)
valid_result[lm_valid<0.1081] = 0
table(valid_result)
table(valid_result)
a = table(valid_result, valid_group$purchase)
a[2,2]/sum(a[2,])
lm_valid
sort(lm_valid)
sort(lm_valid)[1501:2000]
summary(sort(lm_valid)[1501:2000])
valid_result = rep(1,2000)
valid_result[lm_valid<0.1081] = 0
table(valid_result, valid_group$purchase)
80/500
a[2,2]/sum(a[2,])
a
