labs(size = '수용대수') +
scale_size(range=c(1,20))
SeoulMap1 +
geom_point(aes(x = lon, y = lat, color = 'coral3', size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
labs(size = '수용대수') +
scale_size(range=c(1,20))
SeoulMap1 = qmap("seoul", zoom = 11, scale = 4, maptype = "toner-lite", source= 'stamen', extent = 'device', size = c(1280,1280))
SeoulMap1 +
geom_point(aes(x = lon, y = lat, color = 'coral3', size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
labs(size = '수용대수') +
scale_size(range=c(1,20))
coord_equal()
SeoulMap1 +
geom_point(aes(x = lon, y = lat, color = 'coral3', size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
labs(size = '수용대수') +
scale_size(range=c(1,20)) +
coord_equal()
SeoulMap1 +
geom_point(aes(x = lon, y = lat, color = 'coral3', size = CAPA), data = info_by_ADDR) +
theme(legend.position = 'none') +
labs(size = '수용대수') +
scale_size(range=c(1,20)) +
coord_equal()
SeoulMap1 +
geom_point(aes(x = lon, y = lat, color = 'coral3', size = CAPA), data = info_by_ADDR) +
theme(legend.position = 'none') +
labs(size = '수용대수') +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
coord_equal()
SeoulMap +
geom_point(aes(x = lon, y = lat, color = 'coral3', size = CAPA), data = info_by_ADDR) +
theme(legend.position = 'none') +
labs(size = '수용대수') +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
coord_equal()
info_by_ADDR[,c(1,2)] %>% arrange(desc(CAPA)) %>% head(5)
info_by_ADDR[,c(1,2)] %>% arrange(desc(CAPA)) %>% [c(1:5, 20:25),]
info_by_ADDR[,c(1,2)] %>% arrange(desc(CAPA)) %>% select()[c(1:5, 20:25),]
info_by_ADDR[,c(1,2)] %>% arrange(desc(CAPA)) %>% .[c(1:5, 20:25),]
info_by_ADDR[,c(1,2)] %>% arrange(desc(CAPA)) %>% select(ADDR)[c(1:5, 20:25),]
info_by_ADDR[,c(1,2)] %>% arrange(desc(CAPA)) %>% dplyr::select(ADDR)[c(1:5, 20:25),]
info_by_ADDR[,c(1,2)] %>% arrange(desc(CAPA)) %>% .[c(1:5, 20:25),1]
(info_by_ADDR[,c(1,2)] %>% arrange(desc(CAPA)) %>% .[1:5,1]) %in% info_by_ADDR$ADDR
info_by_ADDR$ADDR %in% (info_by_ADDR[,c(1,2)] %>% arrange(desc(CAPA)) %>% .[1:5,1])
color_variable = rep(2,length(info_by_ADDR$ADDR))
color_variable[info_by_ADDR$ADDR %in% (info_by_ADDR[,c(1,2)] %>% arrange(desc(CAPA)) %>% .[1:5,1])] = 1
color_variable[info_by_ADDR$ADDR %in% (info_by_ADDR[,c(1,2)] %>% arrange(desc(CAPA)) %>% .[20:25,1])] = 3
color_variable
SeoulMap +
geom_point(aes(x = lon, y = lat, color = color_variable, size = CAPA), data = info_by_ADDR) +
theme(legend.position = 'none') +
labs(size = '수용대수') +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
coord_equal()
SeoulMap +
geom_point(aes(x = lon, y = lat, color = color_variable, size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_gradientn(colours = brewer.pal(6, "OrRd")) +
labs(size = '수용대수', colour = '주차료') +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
coord_equal()
SeoulMap +
geom_point(aes(x = lon, y = lat, color = color_variable, size = CAPA), data = info_by_ADDR) +
theme(legend.position = 'none') +
scale_colour_gradientn(colours = brewer.pal(3, "Set1")) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
coord_equal()
SeoulMap +
geom_point(aes(x = lon, y = lat, color = color_variable, size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_gradientn(colours = brewer.pal(3, "Set1")) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(scale=FALSE)
SeoulMap +
geom_point(aes(x = lon, y = lat, color = color_variable, size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_gradientn(colours = brewer.pal(3, "Set1")) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(size = FALSE) +
coord_equal()
SeoulMap +
geom_point(aes(x = lon, y = lat, color = color_variable, size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_gradientn(colours = brewer.pal(3, "Set2")) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(size = FALSE) +
coord_equal()
SeoulMap +
geom_point(aes(x = lon, y = lat, color = color_variable, size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_gradientn(colours = brewer.pal(3, "Pastel1")) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(size = FALSE) +
coord_equal()
SeoulMap +
geom_point(aes(x = lon, y = lat, color = color_variable, size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_gradientn(colours = brewer.pal(3, "Pastel1")) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(size = FALSE, color_variable = '상위/하위 5') +
coord_equal()
SeoulMap +
geom_point(aes(x = lon, y = lat, color = color_variable, size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_gradientn(colours = brewer.pal(3, "Pastel1")) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(size = FALSE, color = '상위/하위 5') +
coord_equal()
SeoulMap +
geom_point(aes(x = lon, y = lat, color = color_variable, size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_gradientn(colours = brewer.pal(3, "Pastel1")) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(size = FALSE, color = guide_legend('상위/하위 5')) +
coord_equal()
SeoulMap +
geom_point(aes(x = lon, y = lat, color = color_variable, size = CAPA), bins = 3, data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_gradientn(colours = brewer.pal(3, "Pastel1")) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(size = FALSE, color = guide_legend('상위/하위 5')) +
coord_equal()
SeoulMap +
geom_point(aes(x = lon, y = lat, color = color_variable, size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour(colours = brewer.pal(3, "Pastel1")) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(size = FALSE, color = guide_legend('상위/하위 5')) +
coord_equal()
SeoulMap +
geom_point(aes(x = lon, y = lat, color = color_variable, size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_manual(values = color_variable, breaks = c(1,2,3), labels = c('상위5', '중간','하위5'))) +
SeoulMap +
geom_point(aes(x = lon, y = lat, color = color_variable, size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_manual(values = c(1,2,3), labels = c('상위5', '중간','하위5'))) +
SeoulMap +
geom_point(aes(x = lon, y = lat, color = color_variable, size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_manual(values = c(1,2,3), labels = c('상위5', '중간','하위5')) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(size = FALSE, color = guide_legend('상위/하위 5')) +
coord_equal()
SeoulMap +
geom_point(aes(x = lon, y = lat, color = color_variable, size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_manual(values = c('1','2','3'), labels = c('상위5', '중간','하위5')) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(size = FALSE, color = guide_legend('상위/하위 5')) +
coord_equal()
SeoulMap +
geom_point(aes(x = lon, y = lat, color = color_variable, size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_manual(values = c('red','blue','green'), labels = c('상위5', '중간','하위5')) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(size = FALSE, color = guide_legend('상위/하위 5')) +
coord_equal()
SeoulMap +
geom_point(aes(x = lon, y = lat, color = color_variable, size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_manual(values = c('red','blue','green'), labels = c(1,2,3)) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(size = FALSE, color = guide_legend('상위/하위 5')) +
coord_equal()
SeoulMap +
geom_point(aes(x = lon, y = lat, color = color_variable, size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_manual(values = c('red','blue','green')) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(size = FALSE, color = guide_legend('상위/하위 5')) +
coord_equal()
SeoulMap +
geom_point(aes(x = lon, y = lat, colour = color_variable, size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_manual(values = c('red','blue','green')) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(size = FALSE, color = guide_legend('상위/하위 5')) +
coord_equal()
SeoulMap +
geom_point(aes(x = lon, y = lat, colour = color_variable, size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_manual(values = c('red','blue','green'))
color_variable
SeoulMap +
geom_point(aes(x = lon, y = lat, colour = color_variable, size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
#scale_colour_manual(values = c('red','blue','green')) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(size = FALSE, color = guide_legend('상위/하위 5')) +
coord_equal()
SeoulMap +
geom_point(aes(x = lon, y = lat, colour = color_variable, size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_manual(values = c(1 = 'red',2='blue',3='green')) +
SeoulMap +
geom_point(aes(x = lon, y = lat, colour = color_variable, size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_manual(values = c('1' = 'red','2'='blue','3'='green')) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(size = FALSE, color = guide_legend('상위/하위 5')) +
coord_equal()
SeoulMap +
geom_point(aes(x = lon, y = lat, colour = as.character(color_variable), size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_manual(values = c('1' = 'red','2'='blue','3'='green')) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(size = FALSE, color = guide_legend('상위/하위 5')) +
coord_equal()
SeoulMap +
geom_point(aes(x = lon, y = lat, colour = as.character(color_variable), size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_manual(values = c(brewer.pal(3,'Pastel1'))) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(size = FALSE, color = guide_legend('상위/하위 5')) +
coord_equal()
SeoulMap +
geom_point(aes(x = lon, y = lat, colour = as.character(color_variable), size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_manual(values = c(brewer.pal(3,'Pastel1')), labels = c('상위5','중간','하위5')) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(size = FALSE, color = guide_legend('상위/하위 5')) +
coord_equal()
info_by_ADDR[,c(1,2)] %>% arrange(desc(CAPA)) %>% .[c(1:5, 21:25),]
color_variable = rep(2,length(info_by_ADDR$ADDR))
color_variable[info_by_ADDR$ADDR %in% (info_by_ADDR[,c(1,6)] %>% arrange(desc(CAPA_HOUSE)) %>% .[1:5,1])] = 1
color_variable[info_by_ADDR$ADDR %in% (info_by_ADDR[,c(1,6)] %>% arrange(desc(CAPA_HOUSE)) %>% .[20:25,1])] = 3
SeoulMap +
geom_point(aes(x = lon, y = lat, colour = as.character(color_variable), size = CAPA_HOUSE), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_manual(values = c(brewer.pal(3,'Pastel1')), labels = c('상위5','중간','하위5')) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(size = FALSE, color = guide_legend('상위/하위 5')) +
coord_equal()
info_by_ADDR[,c(1,6)] %>% arrange(desc(CAPA_HOUSE)) %>% .[c(1:5, 21:25),]
color_variable = rep(2,length(info_by_ADDR$ADDR))
color_variable[info_by_ADDR$ADDR %in% (info_by_ADDR[,c(1,2)] %>% arrange(desc(CAPA)) %>% .[1:5,1])] = 1
color_variable[info_by_ADDR$ADDR %in% (info_by_ADDR[,c(1,2)] %>% arrange(desc(CAPA)) %>% .[21:25,1])] = 3
SeoulMap +
geom_point(aes(x = lon, y = lat, colour = as.character(color_variable), size = CAPA), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_manual(values = c(brewer.pal(3,'Pastel1')), labels = c('상위5','중간','하위5')) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(size = FALSE, color = guide_legend('상위/하위 5')) +
coord_equal()
color_variable = rep(2,length(info_by_ADDR$ADDR))
color_variable[info_by_ADDR$ADDR %in% (info_by_ADDR[,c(1,6)] %>% arrange(desc(CAPA_HOUSE)) %>% .[1:5,1])] = 1
color_variable[info_by_ADDR$ADDR %in% (info_by_ADDR[,c(1,6)] %>% arrange(desc(CAPA_HOUSE)) %>% .[21:25,1])] = 3
SeoulMap +
geom_point(aes(x = lon, y = lat, colour = as.character(color_variable), size = CAPA_HOUSE), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_manual(values = c(brewer.pal(3,'Pastel1')), labels = c('상위5','중간','하위5')) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(size = FALSE, color = guide_legend('상위/하위 5')) +
coord_equal()
color_variable = rep(2,length(info_by_ADDR$ADDR))
color_variable[info_by_ADDR$ADDR %in% (info_by_ADDR[,c(1,7)] %>% arrange(desc(CAPA_POP)) %>% .[1:5,1])] = 1
color_variable[info_by_ADDR$ADDR %in% (info_by_ADDR[,c(1,7)] %>% arrange(desc(CAPA_POP)) %>% .[21:25,1])] = 3
SeoulMap +
geom_point(aes(x = lon, y = lat, colour = as.character(color_variable), size = CAPA_POP), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_manual(values = c(brewer.pal(3,'Pastel1')), labels = c('상위5','중간','하위5')) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(size = FALSE, color = guide_legend('상위/하위 5')) +
coord_equal()
info_by_ADDR[,c(1,7)] %>% arrange(desc(CAPA_HOUSE)) %>% .[c(1:5, 21:25),]
info_by_ADDR[,c(1,7)] %>% arrange(desc(CAPA_POP)) %>% .[c(1:5, 21:25),]
library(xlsx)
vehicle = read.xlsx2('d:/github/r/visualization/final_proj/vehicle.xls', 1, encoding = 'utf-8')
vehicle
vehicle[c(-1,-2),c(2:4,8)]
vehicle[c(-1,-2),c(2:7)]
vehicle = vehicle[c(-1,-2),c(2:7)]
colnames(vehicle[,1]) = 'ADDR'
colnames(vehicle[,1])
vehicle[,1]
vehicle[1,]
(vehicle$행정자치구)
colnames(vehicle)
colnames(vehicle)[1]
colnames(vehicle)[1] = 'ADDR'
colnames(vehicle)
info_by_ADDR
info_by_ADDR = info_by_ADDR[-radius]
info_by_ADDR = info_by_ADDR[,-radius]
info_by_ADDR = info_by_ADDR[,-10]
info_by_ADDR
library(xlsx)
vehicle = read.xlsx2('d:/github/r/visualization/final_proj/vehicle.xls', 1, encoding = 'utf-8')
vehicle = vehicle[c(-1,-2),c(2:4)]
colnames(vehicle) = c('ADDR', 'vehicle', 'PARK')
left_join(info_by_ADDR,vehicle[1:2], by = 'ADDR')
info_by_ADDR = info_by_ADDR[,-10]
info_by_ADDR
left_join(info_by_ADDR,vehicle, by = 'ADDR')
a
mutate(info_by_ADDR, CAPA_car = CAPA/vehicle, Public_PARK = CAPA/PARK)
info_by_ADDR = info_by_ADDR[,1:9]
info_by_ADDR
vehicle = read.xlsx2('d:/github/r/visualization/final_proj/vehicle.xls', 1, encoding = 'utf-8', stingsAsFactor=F)
vehicle
vehicle = read.xlsx2('d:/github/r/visualization/final_proj/vehicle.xls', 1, encoding = 'utf-8', StingsAsFactor=F)
vehicle
vehicle = read.xlsx2('d:/github/r/visualization/final_proj/vehicle.xls', 1, encoding = 'utf-8', stingsAsFactors=F)
vehicle
vehicle = read.xlsx2('d:/github/r/visualization/final_proj/vehicle.xls', 1, encoding = 'utf-8', stringsAsFactors = FALSE)
vehicle
vehicle = as.integer(vehicle[c(-1,-2),c(2:4)])
vehicle = as.number(vehicle[c(-1,-2),c(2:4)])
vehicle = as.numeric(vehicle[c(-1,-2),c(2:4)])
vehicle = vehicle[c(-1,-2),c(2:4)]
colnames(vehicle) = c('ADDR', 'vehicle', 'PARK')
left_join(info_by_ADDR,vehicle, by = 'ADDR')
info_by_ADDR[,10:11] = as.integer(info_by_ADDR[,10:11])
info_by_ADDR[,10:11]
info_by_ADDR[,c(10,11)]
info_by_ADDR
left_join(info_by_ADDR,vehicle, by = 'ADDR')
info_by_ADDR[,c(10,11)] = as.integer(info_by_ADDR[,10:11])
info_by_ADDR
info_by_ADDR = left_join(info_by_ADDR,vehicle, by = 'ADDR')
info_by_ADDR[,11:12] = as.integer(info_by_ADDR[,11:12])
info_by_ADDR
info_by_ADDR[,10:11] = as.integer(info_by_ADDR[,10:11])
info_by_ADDR[,10:11] = as.numeric(info_by_ADDR[,10:11])
for (i in 10:11) info_by_ADDR[,i] = as.integer(info_by_ADDR[,i])
info_by_ADDR
mutate(info_by_ADDR, CAPA_car = CAPA/vehicle, Public_PARK = CAPA/PARK)
info_by_ADDR
info_by_ADDR = mutate(info_by_ADDR, CAPA_car = CAPA/vehicle, Public_PARK = CAPA/PARK)
info_by_ADDR
color_variable = rep(2,length(info_by_ADDR$ADDR))
color_variable[info_by_ADDR$ADDR %in% (info_by_ADDR[,c(1,12)] %>% arrange(desc(CAPA)) %>% .[1:5,1])] = 1
color_variable = rep(2,length(info_by_ADDR$ADDR))
color_variable[info_by_ADDR$ADDR %in% (info_by_ADDR[,c(1,12)] %>% arrange(desc(CAPA_car)) %>% .[1:5,1])] = 1
color_variable[info_by_ADDR$ADDR %in% (info_by_ADDR[,c(1,12)] %>% arrange(desc(CAPA_car)) %>% .[21:25,1])] = 3
SeoulMap +
geom_point(aes(x = lon, y = lat, colour = as.character(color_variable), size = CAPA_car), data = info_by_ADDR) +
theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
scale_colour_manual(values = c(brewer.pal(3,'Pastel1')), labels = c('상위5','중간','하위5')) +
scale_size(range=c(1,20)) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
guides(size = FALSE, color = guide_legend('상위/하위 5')) +
coord_equal()
info_by_ADDR[,c(1,12)] %>% arrange(desc(CAPA_car)) %>% .[c(1:5, 21:25),]
info_by_ADDR$radius = info_by_ADDR$Public_PARK
SeoulMap +
#geom_density2d(aes(x = LNG, y = LAT, alpha = 0), bins = 6, data = PI) +
#stat_density2d(aes(x = LNG, y = LAT, fill = ..level.., alpha = ..level..), data = PI, geom = 'polygon') +
#theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
geom_scatterpie(aes(x = lon, y = lat, r= radius), data = info_by_ADDR, cols = 'CAPA_HOUSE', alpha = .8, color = NA, fill = 'coral3') + coord_equal() +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
#labs(fill = '분포') +
scale_alpha(guide = 'none') +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
coord_equal()
SeoulMap +
#geom_density2d(aes(x = LNG, y = LAT, alpha = 0), bins = 6, data = PI) +
#stat_density2d(aes(x = LNG, y = LAT, fill = ..level.., alpha = ..level..), data = PI, geom = 'polygon') +
#theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
geom_scatterpie(aes(x = lon, y = lat, r= radius), data = info_by_ADDR, cols = c('CAPA','PARK'), alpha = .8, color = NA, fill = c(brewer.pal(2,'Pastel1'))) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
#labs(fill = '분포') +
#scale_alpha(guide = 'none') +
coord_equal()
brewer.pal(3,'Pastel1')
SeoulMap +
#geom_density2d(aes(x = LNG, y = LAT, alpha = 0), bins = 6, data = PI) +
#stat_density2d(aes(x = LNG, y = LAT, fill = ..level.., alpha = ..level..), data = PI, geom = 'polygon') +
#theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
geom_scatterpie(aes(x = lon, y = lat, r= radius), data = info_by_ADDR, cols = c('CAPA','PARK'), alpha = .8, color = NA, fill = c("#FBB4AE", "#B3CDE3")) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
#labs(fill = '분포') +
#scale_alpha(guide = 'none') +
coord_equal()
SeoulMap +
#geom_density2d(aes(x = LNG, y = LAT, alpha = 0), bins = 6, data = PI) +
#stat_density2d(aes(x = LNG, y = LAT, fill = ..level.., alpha = ..level..), data = PI, geom = 'polygon') +
#theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
geom_scatterpie(aes(x = lon, y = lat, r= radius), data = info_by_ADDR, cols = c('CAPA','PARK'),  fill = c("#FBB4AE", "#B3CDE3")) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
#labs(fill = '분포') +
#scale_alpha(guide = 'none') +
coord_equal()
SeoulMap +
#geom_density2d(aes(x = LNG, y = LAT, alpha = 0), bins = 6, data = PI) +
#stat_density2d(aes(x = LNG, y = LAT, fill = ..level.., alpha = ..level..), data = PI, geom = 'polygon') +
#theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
geom_scatterpie(aes(x = lon, y = lat, r= radius), data = info_by_ADDR, cols = c('CAPA','PARK'), alpha = .8, color = NA) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
#labs(fill = '분포') +
#scale_alpha(guide = 'none') +
coord_equal()
info_by_ADDR$radius = info_by_ADDR$Public_PARK/100
SeoulMap +
#geom_density2d(aes(x = LNG, y = LAT, alpha = 0), bins = 6, data = PI) +
#stat_density2d(aes(x = LNG, y = LAT, fill = ..level.., alpha = ..level..), data = PI, geom = 'polygon') +
#theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
geom_scatterpie(aes(x = lon, y = lat, r= radius), data = info_by_ADDR, cols = c('CAPA','PARK'), alpha = .8, color = NA) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
#labs(fill = '분포') +
#scale_alpha(guide = 'none') +
coord_equal()
info_by_ADDR$radius = info_by_ADDR$Public_PARK/10
SeoulMap +
#geom_density2d(aes(x = LNG, y = LAT, alpha = 0), bins = 6, data = PI) +
#stat_density2d(aes(x = LNG, y = LAT, fill = ..level.., alpha = ..level..), data = PI, geom = 'polygon') +
#theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
geom_scatterpie(aes(x = lon, y = lat, r= radius), data = info_by_ADDR, cols = c('CAPA','PARK'), alpha = .8, color = NA) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
#labs(fill = '분포') +
#scale_alpha(guide = 'none') +
coord_equal()
info_by_ADDR$radius = info_by_ADDR$Public_PARK/5
SeoulMap +
#geom_density2d(aes(x = LNG, y = LAT, alpha = 0), bins = 6, data = PI) +
#stat_density2d(aes(x = LNG, y = LAT, fill = ..level.., alpha = ..level..), data = PI, geom = 'polygon') +
#theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
geom_scatterpie(aes(x = lon, y = lat, r= radius), data = info_by_ADDR, cols = c('CAPA','PARK'), alpha = .8, color = NA) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
#labs(fill = '분포') +
#scale_alpha(guide = 'none') +
coord_equal()
info_by_ADDR$radius = info_by_ADDR$Public_PARK/3
SeoulMap +
#geom_density2d(aes(x = LNG, y = LAT, alpha = 0), bins = 6, data = PI) +
#stat_density2d(aes(x = LNG, y = LAT, fill = ..level.., alpha = ..level..), data = PI, geom = 'polygon') +
#theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
geom_scatterpie(aes(x = lon, y = lat, r= radius), data = info_by_ADDR, cols = c('CAPA','PARK'), alpha = .8, color = NA) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
#labs(fill = '분포') +
#scale_alpha(guide = 'none') +
coord_equal()
LETTERS[1:4]
#library(ggplot2)
library(scatterpie)
info_by_ADDR$radius = info_by_ADDR$Public_PARK/3
SeoulMap +
#geom_density2d(aes(x = LNG, y = LAT, alpha = 0), bins = 6, data = PI) +
#stat_density2d(aes(x = LNG, y = LAT, fill = ..level.., alpha = ..level..), data = PI, geom = 'polygon') +
#theme(legend.title=element_text(size=8), legend.text = element_text(size = 7)) +
geom_scatterpie(aes(x = lon, y = lat, r= radius), data = info_by_ADDR, cols = c('CAPA','PARK'), alpha = .8, color = NA) +
geom_text(data=info_by_ADDR, mapping=aes(x=lon, y=lat, label=ADDR), size=3) +
#labs(fill = '분포') +
#scale_alpha(guide = 'none') +
coord_equal()
info_by_ADDR[,c(1,13)] %>% arrange(desc(Public_Park)) %>% .[c(1:5, 21:25),]
info_by_ADDR[,c(1,13)] %>% arrange(desc(Public_PARK)) %>% .[c(1:5, 21:25),]
library(shiny)
ui = fluidPage(
headerPanel('Iris k-means clustering'),
sidebarPanel(
selectInput('xcol', 'X Variable', names(iris)),
selectInput('ycol', 'Y Variable', names(iris),
selected=names(iris)[[2]]),
numericInput('clusters', 'Cluster count', 3,
min = 1, max = 9),
checkboxInput('center_tf','Center points')
),
mainPanel(
plotOutput('plot1')
)
)
#서버에서 return해야 할 변수는: xcol, ycol, clusters, plot1, center_tf
server = function(input, output)
{
selectedData = reactive({
iris[, c(input$xcol, input$ycol)]
})
clusters <- reactive({
kmeans(selectedData(), input$clusters)
})
output$plot1 <- renderPlot({
plot(selectedData(),
col = clusters()$cluster,
pch = 20, cex = 3)
if(input$center_tf) points(clusters()$centers, pch = 4, cex = 4, lwd = 4)
})
}
shinyApp(ui = ui, server= server)
