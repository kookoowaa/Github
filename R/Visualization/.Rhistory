idx <- !( grepl(query.n, wname) | (wcount<=sort.var)  |nchar(wname)==1 | (wcount > 220))
wname.rel <- wname[idx]
wcount.rel <- wcount[idx]
pal <- brewer.pal(12, "Paired")
wordcloud(wname.rel,scale=c(3.8,0.05),freq = wcount.rel, colors = pal)
gc()
rm(list=ls())
dev.off()
library(maps)
library(mapdata)
map(database = 'county')
map(database = 'world', region = 'south korea')
map('world2Hires', 'South Korea')
data("us.cities")
head(us.cities)
map('state', 'Georgia')
map.cities(us.cities, country = 'GA')
map('world', fill = T, col = rainbow(1627))
data(unemp) # unemployed rate data
data(county.fips) # county fips data
head(unemp,3)
head(county.fips)
unemp$colorBuckets <- as.numeric(cut(unemp$unemp, c(0, 2, 4, 6, 8, 10, 100)))
colorsmatched <- unemp$colorBuckets[match(county.fips$fips, unemp$fips)]
library(mapproj)
colors = c("#F1EEF6","#D4B9DA","#C994C7","#DF65B0","#DD1C77","#980043")
map("county", col = colors[colorsmatched], fill = TRUE, resolution = 0, lty = 0, projection = 'polyconic')
#colorsmatched[1]
#county.fips[1,]
#unemp[1,]
wm = map_data('world')
#wm = map_data('world')
ur <- wm %>% dplyr::select(region)%>%unique()
map("world", ur$region[c(125,185)],fill = T, col = "blue")
ur <- wm %>% dplyr::select(region)%>%unique()
wm = map_data('world')
library(maps)
library(mapdata)
library(maps)
library(mapdata)
library(dplyr)
library(ggplot2)
wm = map_data('world')
ur <- wm %>% dplyr::select(region)%>%unique()
grep( "Korea", ur$region )
map("world", ur$region[c(125,185)],fill = T, col = "blue")
map("world2hires", ur$region[c(125,185)],fill = T, col = "blue")
map("world", ur$region[c(125,185)],fill = T, col = "blue")
abline(h=38)
wm = map_data('world')
ur <- wm %>% dplyr::select(region)%>%unique()
grep( "Korea", ur$region )
map("world", ur$region[c(125,185)],fill = T, col = "blue")
abline(h=38)
map("World2Hires", ur$region[c(125,185)],fill = T, col = "blue")
install.packages('mapplot')
install.packages('mapplots')
library(maps)
library(mapdata)
library(dplyr)
library(ggplot2)
library(mapplots)
wm = map_data('world')
ur <- wm %>% dplyr::select(region)%>%unique()
grep( "Korea", ur$region )
map("world", ur$region[c(125,185)],fill = T, col = "blue")
abline(h=38)
add.pie(1, x = 37.51974777, y = 126.85398553)
## <LAT>37.51974777</LAT>
## <LNG>126.85398553</LNG>
wm = map_data('world')
ur <- wm %>% dplyr::select(region)%>%unique()
grep( "Korea", ur$region )
map("world", ur$region[c(125,185)],fill = T, col = "blue")
abline(h=38)
add.pie(100, x = 37.51974777, y = 126.85398553)
## <LAT>37.51974777</LAT>
## <LNG>126.85398553</LNG>
wm = map_data('world')
ur <- wm %>% dplyr::select(region)%>%unique()
grep( "Korea", ur$region )
map("world", ur$region[c(125,185)],fill = T, col = "blue")
abline(h=38)
add.pie(100:1, x = 37.51974777, y = 126.85398553)
## <LAT>37.51974777</LAT>
## <LNG>126.85398553</LNG>
wm = map_data('world')
ur <- wm %>% dplyr::select(region)%>%unique()
grep( "Korea", ur$region )
map("world", ur$region[c(125,185)],fill = T, col = "blue")
abline(h=38)
add.pie(z=100:1, x = 37.51974777, y = 126.85398553)
## <LAT>37.51974777</LAT>
## <LNG>126.85398553</LNG>
map('worldHires', 'South Korea')
map('worldHires', 'South Korea')
abline(h=38)
add.pie(z=100:1, x = 37.51974777, y = 126.85398553)
map('worldHires', 'South Korea')
abline(h=38)
plot(x = 37.51974777, y = 126.85398553)
#pie chart on map
library(mapplots)
library(ggmap)
map('worldHires', 'South Korea')
seoul_loc = geocode('seoul')
busan_loc = geocode('Busan')
add.pie(z=1:2,labels = c('a','b'),
x = seoul_loc$lon, y = seoul_loc$lat, radius = 0.5)
add.pie(z=4:3,labels = c('a','b'),
x = busan_loc$lon, y = busan_loc$lat, radius = 0.5)
seoul_loc
#pie chart on map
library(mapplots)
library(ggmap)
map('worldHires', 'South Korea')
seoul_loc = geocode('seoul')
busan_loc = geocode('Busan')
add.pie(z=c(1,4,6),labels = c('a','b','c'),
x = seoul_loc$lon, y = seoul_loc$lat, radius = 0.8)
add.pie(z=4:3,labels = c('a','b'),
x = busan_loc$lon, y = busan_loc$lat, radius = 0.5)
install.packages('openstreetmap)
install.packages('OpenstreetMap')
install.packages('OpenStreetMap')
library(OpenStreetMap)
library(ggplot2)
map = openmap(upperLeft = c(43, 119), lowerRight = c(33, 134),
type = 'bing')
plot(map)
abline(h=38, col= 'white')
library(ggplot2)
map = openmap(upperLeft = c(43, 119), lowerRight = c(33, 134),
type = 'bing')
plot(map)
abline(h=38, col= 'white')
?plot
plot(map)
nm = c("osm", "maptoolkit-topo", "stamen-toner",
"stamen-watercolor", "esri", "esri-topo",
"nps", "apple-iphoto", "skobbler")
par(mfrow=c(3,3))
for(i in 1:length(nm)){
map <- openmap(c(43.46,119.94),
c(33.22,133.98),
minNumTiles=3,type=nm[i])
plot(map, xlab = paste(nm[i]))
}
map1 <- openmap(c(43.46,119.94),
c(33.22,133.98))
plot(map1)
abline(h = 38, col = 'blue')
str(map1)
install.packages('sp)
install.packages('sp')
install.packages('sp')
install.packages("sp")
library(sp)
map1$tiles[[1]]$projection
library(sp)
map_p <- openproj(map1, projection = CRS("+proj=longlat"))
?openproj
map_p <- openproj(map1, projection = CRS("+proj=longlat"))
library(sp)
map_p <- openproj(map1, projection = CRS("+proj=longlat"))
library(sp)
map_p <- openproj(map1, projection = CRS("+proj=longlat"))
library(sp)
map_p <- openproj(map1, projection = CRS("+proj=longlat"))
library(OpenStreetMap)
library(ggplot2)
map = openmap(upperLeft = c(43, 119), lowerRight = c(33, 134),
type = 'bing')
plot(map)
nm = c("osm", "maptoolkit-topo", "stamen-toner",
"stamen-watercolor", "esri", "esri-topo",
"nps", "apple-iphoto", "skobbler")
par(mfrow=c(3,3))
for(i in 1:length(nm)){
map <- openmap(c(43.46,119.94),
c(33.22,133.98),
minNumTiles=3,type=nm[i])
plot(map, xlab = paste(nm[i]))
}
map1 <- openmap(c(43.46,119.94), c(33.22,133.98))
plot(map1)
abline(h = 38, col = 'blue')
str(map1)
map1$tiles[[1]]$projection
#CRS(coordinate reference system)을 통해 맵 구현
library(OpenStreetMap)
map_p <- openproj(map1, projection = CRS("+proj=longlat"))
str(map_p)
plot(map_p)
abline(h = 38, col = 'blue')
#한국에 적합한 위경도
map_p <- openproj(map1, projection =
CRS("+proj=utm +zone=52N + datum=WGS84"))
plot(map_p)
abline(h = 38, col = 'blue')
library(sp)
a  <-data.frame(lon =  seq(100,140,by = 0.1),
lat =  38)
sp::coordinates(a) = ~ lon + lat
str(a)
# NA인 a @proj4sting을 입력
sp::proj4string(a) = "+proj = longlat"
# NA인 a @proj4sting을 입력
sp::proj4string(a) = "+proj=longlat"
str(a)
a_tf = spTransform(a, CRS('+proj=utm +zone=52N + datum=WGS84'))
str(a_tf)
plot(map_p)
points(a_tf@coords[,1],a_tf@coords[,2])
plot(map_p)
points(a_tf@coords[,1],a_tf@coords[,2] col = 'blue)
plot(map_p)
points(a_tf@coords[,1],a_tf@coords[,2] col = 'blue')
plot(map_p)
points(a_tf@coords[,1],a_tf@coords[,2] col = 'blue')
plot(map_p)
points(a_tf@coords[,1],a_tf@coords[,2], col = 'blue')
plot(map_p)
points(a_tf@coords[,1],a_tf@coords[,2], type = 'l', col = 'blue')
wm = map_data('world')
ur <- wm %>% dplyr::select(region)%>%unique()
library(maps)
library(mapdata)
library(dplyr)
library(ggplot2)
library(mapplots)
map(database = 'county')
map(database = 'world', region = 'south korea')
map('world2Hires', 'South Korea')
data("us.cities")
head(us.cities)
map('state', 'Georgia')
map.cities(us.cities, country = 'GA')
map('world', fill = T, col = rainbow(1627))
data(unemp) # unemployed rate data
data(county.fips) # county fips data
head(unemp,3)
head(county.fips)
unemp$colorBuckets <- as.numeric(cut(unemp$unemp, c(0, 2, 4, 6, 8, 10, 100)))
colorsmatched <- unemp$colorBuckets[match(county.fips$fips, unemp$fips)]
library(mapproj)
colors = c("#F1EEF6","#D4B9DA","#C994C7","#DF65B0","#DD1C77","#980043")
map("county", col = colors[colorsmatched], fill = TRUE, resolution = 0, lty = 0, projection = 'polyconic')
#colorsmatched[1]
#county.fips[1,]
#unemp[1,]
wm = map_data('world')
ur <- wm %>% dplyr::select(region)%>%unique()
grep( "Korea", ur$region )
map("world", ur$region[c(125,185)],fill = T, col = "blue")
abline(h=38)
points(x=37.51974777, y = 126.85398553)
## <LAT>37.51974777</LAT>
## <LNG>126.85398553</LNG>
wm = map_data('world')
ur <- wm %>% dplyr::select(region)%>%unique()
grep( "Korea", ur$region )
map("world", ur$region[c(125,185)],fill = T, col = "blue")
abline(h=38)
points(x=37.51974777, y = 126.85398553, pch=9)
## <LAT>37.51974777</LAT>
## <LNG>126.85398553</LNG>
wm = map_data('world')
ur <- wm %>% dplyr::select(region)%>%unique()
grep( "Korea", ur$region )
map("world", ur$region[c(125,185)],fill = T, col = "blue")
abline(h=38)
points(x=37.51974777, y = 126.85398553, pch=9, col = 'red')
## <LAT>37.51974777</LAT>
## <LNG>126.85398553</LNG>
library(sp)
map = openmap(upperLeft = c(43, 119),lowerRight = c(33, 134))
seoul_loc = geocode('Seoul')
library(OpenStreetMap)
seoul_loc = geocode('Seoul')
library(mapplots)
library(sp)
library(mapplots)
map = openmap(upperLeft = c(43, 119),lowerRight = c(33, 134))
seoul_loc = geocode('Seoul')
library(sp)
library(ggmap)
map = openmap(upperLeft = c(43, 119),lowerRight = c(33, 134))
seoul_loc = geocode('Seoul')
coordinates(seoul_loc) = ~lon + lat
proj4string(seoul_loc) = "+proj=longlat +datum=WGS84"
seoul_loc_Tf = spTransform(seoul_loc,
CRS(as.character(map$tiles[[1]]$projection)))
plot(map)
add.pie(z=1:2,labels = c('a','b'),
x = seoul_loc_Tf@coords[1],
y = seoul_loc_Tf@coords[2], radius = 100000)
data(crime)
head(crime, 2)
violent_crimes = subset(crime,
offense != "auto theft" &
offense != "theft" &
offense != "burglary")
violent_crimes$offense <- factor(violent_crimes$offense,
levels = c("robbery", "aggravated assault", "rape", "murder"))
violent_crimes = subset(violent_crimes,
-95.39681 <= lon & lon <= -95.34188 &
29.73631 <= lat & lat <=  29.78400)
HoustonMap = qmap("houston", zoom = 14,
color = "bw", legend = "topleft")
HoustonMap + geom_point(aes(x = lon, y = lat,
colour = offense, size = offense),
data = violent_crimes)
HoustonMap +
geom_point(aes(x = lon, y = lat,
colour = offense, size = offense),
data = violent_crimes) +
geom_density2d(aes(x = lon, y = lat), size = 0.2 , bins = 4,
data = violent_crimes)
?qmap
geom_density2d(aes(x = lon, y = lat), size = 0.2 , bins = 4,
data = violent_crimes)
HoustonMap +
geom_point(aes(x = lon, y = lat,
colour = offense, size = offense),
data = violent_crimes) +
geom_density2d(aes(x = lon, y = lat), size = 0.2 , bins = 4,
data = violent_crimes)
HoustonMap +
geom_point(aes(x = lon, y = lat,
colour = offense, size = offense),
data = violent_crimes)
HoustonMap +
geom_point(aes(x = lon, y = lat,
colour = offense, size = offense),
data = violent_crimes) +
geom_density2d(aes(x = lon, y = lat), size = 0.2 , bins = 4,
data = violent_crimes)
HoustonMap +
geom_point(aes(x = lon, y = lat,
colour = offense, size = offense),
data = violent_crimes) +
geom_density2d(aes(x = lon, y = lat), size = 0.2 , bins = 4,
data = violent_crimes) +
stat_densirt2d(aes(x = lon, y = lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = violent_crimes, geom = 'polygon')
HoustonMap +
geom_point(aes(x = lon, y = lat,
colour = offense, size = offense),
data = violent_crimes) +
geom_density2d(aes(x = lon, y = lat), size = 0.2 , bins = 4,
data = violent_crimes) +
stat_density2d(aes(x = lon, y = lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = violent_crimes, geom = 'polygon')
HoustonMap +
geom_point(aes(x = lon, y = lat,
colour = offense, size = offense),
data = violent_crimes) +
geom_density2d(aes(x = lon, y = lat), size = 0.2 , bins = 4,
data = violent_crimes) +
stat_density2d(aes(x = lon, y = lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = violent_crimes, geom = 'polygon')
load('./data/wk6/airport.Rdata')
head(airport_krjp)
link_krjp%>%filter(group==1)
link_krjp
map = ggmap(get_googlemap(center = c(lon=134, lat=36),
zoom = 5, maptype='roadmap', color='bw'))
map + geom_line(data=link_krjp,aes(x=lon,y=lat,group=group),
col='grey10',alpha=0.05) +
geom_point(data=airport_krjp[complete.cases(airport_krjp),],
aes(x=lon,y=lat, size=Freq), colour='black',alpha=0.5) +
scale_size(range=c(0,15))
if (!require(sp)) install.packages('sp')
if (!require(gstat)) install.packages('gstat')
if (!require(automap)) install.packages('automap')
if (!require(rgdal)) install.packages('rgdal')
if (!require(e1071)) install.packages('e1071')
if (!require(dplyr)) install.packages('dplyr')
if (!require(lattice)) install.packages('lattice')
if (!require(viridis)) install.packages('viridis')
library(sp); library(gstat); library(automap);
library(rgdal); library(e1071); library(lattice);
library(ggplot2); library(raster);library(viridis)
seoul032823 <- read.csv ("./data/wk6/seoul032823.csv")
head(seoul032823)
skorea <- getData(name ="GADM", country= "KOR", level=2)
head(skorea,2)
skorea <- getData(name ="GADM", country= "KOR", level=2)
head(skorea,2)
head(skorea@polygons[[1]]@Polygons[[1]]@coords, 3)
head(skorea@polygons[[1]]@Polygons[[1]]@coords, )
plot(skorea@polygons[[1]]@Polygons[[1]]@coords)
skorea@polygons[[1]]@Polygons[[1]]@coords
skorea@polygons[[1]]
skorea@polygons
skorea = fortify(skorea)
skorea
ggplot() + geom_map(data= skorea, map= skorea,
aes(map_id=id,group=group),fill=NA, colour="black") +
geom_point(data=seoul032823, aes(LON, LAT, col = PM10),alpha=0.7) +
labs(title= "PM10 Concentration in Seoul Area at South Korea",
x="Longitude", y= "Latitude", size="PM10(microgm/m3)")
ggplot() + geom_map(data= skorea, map= skorea,
aes(map_id=id,group=group),fill=NA, colour="black")
ggplot() + geom_map(data= skorea, map= skorea,
aes(map_id=id,group=group),fill=NA, colour="black") +
geom_point(data=seoul032823, aes(LON, LAT, col = PM10),alpha=0.7)
coordinates(seoul032823) <- ~LON+LAT
coordinates
coordinates(seoul032823)
coordinates(seoul032823) <- ~LON+LAT
LON.range <- c(126.5, 127.5)
LAT.range <- c(37, 38)
seoul032823.grid <- expand.grid(
LON = seq(from = LON.range[1], to = LON.range[2], by = 0.01),
LAT = seq(from = LAT.range[1], to = LAT.range[2], by = 0.01))
plot(seoul032823.grid)
points(seoul032823, pch= 16,col="red")
coordinates(seoul032823.grid)<- ~LON+LAT ## sp class
gridded(seoul032823.grid)<- T
plot(seoul032823.grid)
points(seoul032823, pch= 16,col="red")
seoul032823_OK <- autoKrige(formula = PM10~1,
input_data = seoul032823,
new_data = seoul032823.grid )
seoul032823.grid
plot(seoul032823.grid)
points(seoul032823_OK, pch= 16,col="red")
myPoints <- data.frame(seoul032823)
myKorea <- data.frame(skorea)
myKrige <- data.frame(seoul032823_OK$krige_output@coords,
pred = seoul032823_OK$krige_output@data$var1.pred)
ggplot()+ theme_minimal() +
geom_tile(data = myKrige, aes(x= LON, y= LAT, fill = pred)) +
geom_map(data= myKorea, map= myKorea, aes(map_id=id,group=group),
fill=NA, colour="black") +
coord_cartesian(xlim= LON.range ,ylim= LAT.range) +
labs(title= "PM10 Concentration in Seoul Area at South Korea",
x="Longitude", y= "Latitude")+
theme(title= element_text(hjust = 0.5,vjust = 1,face= c("bold")))+
scale_fill_viridis(option="magma")
myKrige
ggplot()+ theme_minimal() +
geom_tile(data = myKrige, aes(x= LON, y= LAT, fill = pred)) +   #격자
geom_map(data= myKorea, map= myKorea, aes(map_id=id,group=group),
fill=NA, colour="black") +
coord_cartesian(xlim= LON.range ,ylim= LAT.range) +
labs(title= "PM10 Concentration in Seoul Area at South Korea",
x="Longitude", y= "Latitude")+
theme(title= element_text(hjust = 0.5,vjust = 1,face= c("bold")))+
scale_fill_viridis(option="D")
ggplot()+ theme_minimal() +
geom_tile(data = myKrige, aes(x= LON, y= LAT, fill = pred)) +   #격자
geom_map(data= myKorea, map= myKorea, aes(map_id=id,group=group),
fill=NA, colour="black") +
coord_cartesian(xlim= LON.range ,ylim= LAT.range) +
labs(title= "PM10 Concentration in Seoul Area at South Korea",
x="Longitude", y= "Latitude")+
theme(title= element_text(hjust = 0.5,vjust = 1,face= c("bold")))+
scale_fill_viridis(option="c")
ggplot()+ theme_minimal() +
geom_tile(data = myKrige, aes(x= LON, y= LAT, fill = pred)) +   #격자
geom_map(data= myKorea, map= myKorea, aes(map_id=id,group=group),
fill=NA, colour="black") +
coord_cartesian(xlim= LON.range ,ylim= LAT.range) +
labs(title= "PM10 Concentration in Seoul Area at South Korea",
x="Longitude", y= "Latitude")+
theme(title= element_text(hjust = 0.5,vjust = 1,face= c("bold")))+
scale_fill_viridis(option="C")
ggplot()+ theme_minimal() +
geom_tile(data = myKrige, aes(x= LON, y= LAT, fill = pred)) +   #격자
geom_map(data= myKorea, map= myKorea, aes(map_id=id,group=group),
fill=NA, colour="black") +
coord_cartesian(xlim= LON.range ,ylim= LAT.range) +
labs(title= "PM10 Concentration in Seoul Area at South Korea",
x="Longitude", y= "Latitude")+
theme(title= element_text(hjust = 0.5,vjust = 1,face= c("bold")))+
scale_fill_viridis(option="B")
ggplot()+ theme_minimal() +
geom_tile(data = myKrige, aes(x= LON, y= LAT, fill = pred)) +   #격자
geom_map(data= myKorea, map= myKorea, aes(map_id=id,group=group),
fill=NA, colour="black") +
coord_cartesian(xlim= LON.range ,ylim= LAT.range) +
labs(title= "PM10 Concentration in Seoul Area at South Korea",
x="Longitude", y= "Latitude")+
theme(title= element_text(hjust = 0.5,vjust = 1,face= c("bold")))+
scale_fill_viridis(option="A")
ggplot()+ theme_minimal() +
geom_tile(data = myKrige, aes(x= LON, y= LAT, fill = pred)) +   #격자
geom_map(data= myKorea, map= myKorea, aes(map_id=id,group=group),
fill=NA, colour="black") +
coord_cartesian(xlim= LON.range ,ylim= LAT.range) +
labs(title= "PM10 Concentration in Seoul Area at South Korea",
x="Longitude", y= "Latitude")+
theme(title= element_text(hjust = 0.5,vjust = 1,face= c("bold")))+
scale_fill_viridis(option="E")
ggplot()+ theme_minimal() +
geom_tile(data = myKrige, aes(x= LON, y= LAT, fill = pred)) +   #격자
geom_map(data= myKorea, map= myKorea, aes(map_id=id,group=group),
fill=NA, colour="black") +
coord_cartesian(xlim= LON.range ,ylim= LAT.range) +
labs(title= "PM10 Concentration in Seoul Area at South Korea",
x="Longitude", y= "Latitude")+
theme(title= element_text(hjust = 0.5,vjust = 1,face= c("bold")))+
scale_fill_viridis(option="D")
ggplot()+ theme_minimal() +
geom_tile(data = myKrige, aes(x= LON, y= LAT, fill = pred)) +   #격자
geom_map(data= myKorea, map= myKorea, aes(map_id=id,group=group),
fill=NA, colour="black") +
coord_cartesian(xlim= LON.range ,ylim= LAT.range) +
labs(title= "PM10 Concentration in Seoul Area at South Korea",
x="Longitude", y= "Latitude")+
theme(title= element_text(hjust = 0.5,vjust = 1,face= c("bold")))+
scale_fill_viridis(option="magma")
