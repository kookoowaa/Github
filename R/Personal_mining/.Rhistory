knitr::opts_chunk$set(echo = TRUE)
library(KoNLP)
library(tm)
library(wordcloud)
library(Matrix)
library(rvest)
library(httr)
library(dplyr)
twitter_txt = readLines('./twitter_text_modified.txt', encoding = 'UTF-8')
twitter_txt = unique(twitter_txt)
twitter_txt = gsub(pattern = '[ㅋㅎㅠㄱㅜ]*', replace='', twitter_txt)
cps = Corpus(VectorSource(twitter_txt))
dtm = DocumentTermMatrix(cps, control = list(tokenize = extractNoun, removeNumber = T, removePunctuation = T))
rmat <-spMatrix(dtm$nrow,dtm$ncol, i=dtm$i, j=dtm$j, x=dtm$v)
wcount <- colSums(rmat)
wname <- repair_encoding(dtm$dimnames$Terms)
sort.var <- sort(wcount,decreasing = T)[200]
idx <- !( grepl('과자', wname) | (wcount<=sort.var)  |nchar(wname)==1 | grepl('내가', wname) | grepl('먹고', wname) | grepl('너무', wname) )
wname.rel <- wname[idx]
wcount.rel <- wcount[idx]
pal <- brewer.pal(12, "Set3")
wordcloud(wname.rel,scale=c(3.9,0.05),freq = wcount.rel, colors = pal)
client_id = 'pNeL9M2Busi7vWn4XkW6';
client_secret = 'nTY9Mj5v2K';
header = add_headers('X-Naver-Client-Id' = client_id, 'X-Naver-Client-Secret' = client_secret)
query.n = query = '과자'
query = iconv(query, to = 'UTF-8', toRaw = T)
query = paste0('%', paste(unlist(query), collapse = '%'))
query = toupper(query)
end_num = 1000
display_num = 100
start_point = seq(1, end_num, by = display_num)
i = 1
final_dat = NULL
for(i in 1:length(start_point))
{
url = paste0('https://openapi.naver.com/v1/search/blog.xml?query=',query,'&display=',display_num,'&start=',start_point[i],'&sort=sim')
url_body = read_xml(GET(url, header), encoding = "UTF-8")
title = url_body %>% xml_nodes('item title') %>% xml_text()
bloggername = url_body %>% xml_nodes('item bloggername') %>% xml_text()
postdate = url_body %>% xml_nodes('postdate') %>% xml_text()
link = url_body %>% xml_nodes('item link') %>% xml_text()
description = url_body %>% xml_nodes('item description') %>% html_text()
temp_dat = cbind(title, bloggername, postdate, link, description)
final_dat = rbind(final_dat, temp_dat)
}
final_dat = data.frame(final_dat, stringsAsFactors = F)
dat_tmp <- final_dat
for (i in 1:nrow(final_dat))
{
dat_tmp[i,5]<- gsub('[ㅋㅎㅠㅜ]', '', gsub( "<[/|A-Za-z]*>",  "", gsub("&[a-z]*;",  "", gsub("http[/:a-z.]*",  "", final_dat[i,5]))))
dat_tmp[i,1]<- gsub('[ㅋㅎㅠㅜ]', '',  gsub( "<[/|A-Za-z]*>",  "", gsub("&[a-z]*;",  "", final_dat[i,1])))
}
text = dat_tmp[,5]
cps = Corpus(VectorSource(text))
dtm = DocumentTermMatrix(cps, control = list(tokenize = extractNoun, removeNumber = T, removePunctuation = T))
rmat <-spMatrix(dtm$nrow,dtm$ncol, i=dtm$i, j=dtm$j, x=dtm$v)
wcount <- colSums(rmat)
wname <- repair_encoding(dtm$dimnames$Terms)
sort.var <- sort(wcount,decreasing = T)[200]
idx <- !( grepl(query.n, wname) | (wcount<=sort.var)  |nchar(wname)==1 |grepl('있', wname))
wname.rel <- wname[idx]
wcount.rel <- wcount[idx]
pal <- brewer.pal(12, "Paired")
wordcloud(wname.rel,scale=c(3.8,0.05),freq = wcount.rel, colors = pal)
final_dat
dat_tmp
text
dat_tmp
text = dat_tmp[,1]
cps = Corpus(VectorSource(text))
dtm = DocumentTermMatrix(cps, control = list(tokenize = extractNoun, removeNumber = T, removePunctuation = T))
rmat <-spMatrix(dtm$nrow,dtm$ncol, i=dtm$i, j=dtm$j, x=dtm$v)
wcount <- colSums(rmat)
wname <- repair_encoding(dtm$dimnames$Terms)
sort.var <- sort(wcount,decreasing = T)[200]
idx <- !( grepl(query.n, wname) | (wcount<=sort.var)  |nchar(wname)==1 |grepl('있', wname))
wname.rel <- wname[idx]
wcount.rel <- wcount[idx]
pal <- brewer.pal(12, "Paired")
wordcloud(wname.rel,scale=c(3.8,0.05),freq = wcount.rel, colors = pal)
wname.rel
sort.var <- sort(wcount,decreasing = T)[200]
idx <- !( grepl(query.n, wname) | (wcount<=sort.var)  |nchar(wname)==1 |grepl('있', wname) |grepl('추천', wname))
wname.rel <- wname[idx]
wcount.rel <- wcount[idx]
pal <- brewer.pal(12, "Paired")
wordcloud(wname.rel,scale=c(3.8,0.05),freq = wcount.rel, colors = pal)
sort.var <- sort(wcount,decreasing = T)[200]
idx <- !( grepl(query.n, wname) | (wcount<=sort.var)  |nchar(wname)==1 |grepl('있', wname) |grepl('추천', wname)|grepl('만들', wname))
wname.rel <- wname[idx]
wcount.rel <- wcount[idx]
pal <- brewer.pal(12, "Paired")
wordcloud(wname.rel,scale=c(3.8,0.05),freq = wcount.rel, colors = pal)
rm(list=ls())
rd = rbind(read.csv('d:/cns_data/rd_2015.csv', stringsAsFactors = F), read.csv('d:/cns_data/rd_2016.csv', stringsAsFactors = F))[,-1]
library(dplyr)
rd1 = rd %>% filter(BM != '기타/판촉', BM != 'NC', BM != '해외전용', BM != '중국전용')
upc = rd1 %>% group_by(UPC = 자재코드, prod_name = 제품명) %>% tally()
upc
upc %>% distinct(UPC)
upc
upc %>% filter(n>100)
upc = upc %>% filter(n>100) %>% select(UPC) %>% unlist
upc
rd = rd %>% filter(자재코드 %in% upc)
rd
rd1
rd
rd %>% filter(판매수량 <= 0 | 매출액 <=0)
rd %>% filter(판매수량 <= 0 | 매출액 <=0) %>% distinct(자재코드)
unstable = rd %>% filter(판매수량 <= 0 | 매출액 <=0) %>% distinct(자재코드) %>% unlist
rd1 %>% group_by(UPC = 자재코드, prod_name = 제품명) %>% tally()
rd1 %>% group_by(UPC = 자재코드, prod_name = 제품명) %>% tally() %>% filter(UPC %in% unstable)
rd1 %>% group_by(UPC = 자재코드, prod_name = 제품명) %>% tally()
rd1 %>% group_by(UPC = 자재코드, prod_name = 제품명) %>% tally() filter(n>100)
rd1 %>% group_by(UPC = 자재코드, prod_name = 제품명) %>% tally() %>%filter(n>100)
rd1 %>% group_by(UPC = 자재코드, prod_name = 제품명) %>% tally() %>%filter(n>100) %>% filter(UPC %in% unstable)
rd
upc_table = rd %>% group_by(UPC = 자재코드) %>% tally()
upc_table
upc_table %>% filter(UPC!=unstable)
upc_table
stable = rd %>% filter(판매수량 > 0 | 매출액 >0) %>% distinct(자재코드) %>% unlist
upc_table %>% filter(UPC %>% stable)
upc_table %>% filter(UPC %in% stable)
upc_table
stable
rd %>% filter(판매수량 <= 0 | 매출액 <=0) %>% distinct(자재코드)
rd %>% filter(판매수량 > 0 | 매출액 >0) %>% distinct(자재코드)
rd %>% filter(판매수량 > 0 & 매출액 >0) %>% distinct(자재코드)
upc_table[upc_table$UPC %in% unstable, ]
upc_table[upc_table$UPC %not in% unstable, ]
upc_table$UPC %in% unstable
upc_table$UPC %in% !unstable
upc_table$UPC %in% unstable
upc_table$UPC %!in% unstable
`%not in%` <- function (x, table) is.na(match(x, table, nomatch=NA_integer_))
upc_table$UPC %not in% unstable
upc_table[upc_table$UPC %not in% unstable, ]
unstable
upc_table
rd[rd$자재코드 %not in% unstable, ]
rd
upc_table %>% filter(UPC %in% unstable)
rd %>% filter(자재코드 %in% unstable)
rd %>% filter(자재코드 ==32800233)
rd
rd1 = rd[rd$자재코드 %not in% unstable, ]
unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드])
promo = read.csv('d:/cns_data/promotion.csv', stringsAsFactors = F)
promo
unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드])
raw_data = rd1 ; rm(rd1)
unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드])
promo
promo[,4] >20140000
promo[promo[,4] >20140000,]
promo[promo[,3] >20140000,]
promo = promo[promo[,3] >20150000,]
promo %>% arrange(desc(프로모션종료일))
raw_data
raw_data$프로모션정보 = NA
raw_data$프로모션명칭 = NA
raw_data$할인내용 = NA
for (n in unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드]))
{
x = raw_data[raw_data$자재코드==n,]
y = promo[promo$자재코드==n,]
y = y[complete.cases(y),]
ptm <- proc.time()
print(paste(which(n==unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드])),'/ 11400'))
for(i in 1:nrow(x))
{
for (m in 1:nrow(y))
{
if (x[i,2] >= y[m,3] & x[i,2] <= y[m,4])
{
x[i,]$프로모션정보 = as.character(y[m,]$프로모션정보)
x[i,]$프로모션명칭 = as.character(y[m,]$프로모션명칭)
x[i,]$할인내용 = as.character(y[m,]$할인내용)
raw_data[raw_data$자재코드==n,][i,] = x[i,]
}
}
}
el.time <- proc.time() - ptm
print(el.time)
}
unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드])
raw_data$프로모션정보 = NA
raw_data$프로모션명칭 = NA
raw_data$할인내용 = NA
for (n in unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드]))
{
x = raw_data[raw_data$자재코드==n,]
y = promo[promo$자재코드==n,]
y = y[complete.cases(y),]
ptm <- proc.time()
print(paste(which(n==unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드])),'/ 11400'))
for(i in 1:nrow(x))
{
for (m in 1:nrow(y))
{
if (x[i,2] >= y[m,3] & x[i,2] <= y[m,4])
{
x[i,]$프로모션정보 = as.character(y[m,]$프로모션정보)
x[i,]$프로모션명칭 = as.character(y[m,]$프로모션명칭)
x[i,]$할인내용 = as.character(y[m,]$할인내용)
raw_data[raw_data$자재코드==n,][i,] = x[i,]
}
}
}
el.time <- proc.time() - ptm
print(el.time)
}
raw_data
promo$자재코드[promo$자재코드 %in% raw_data$자재코드]
raw_data[raw_data$자재코드==n,]
y
as.character(y[m,]$프로모션정보)
as.character(y[m,]$프로모션명칭)
x[i,]
raw_data$프로모션정보 = NA
raw_data$프로모션명칭 = NA
raw_data$할인내용 = NA
for (n in unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드]))
{
x = raw_data[raw_data$자재코드==n,]
y = promo[promo$자재코드==n,]
y = y[complete.cases(y),]
ptm <- proc.time()
print(paste(which(n==unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드])),'/ 11400'))
for(i in 1:nrow(x))
{
for (m in 1:nrow(y))
{
if (x[i,1] >= y[m,3] & x[i,1] <= y[m,4])
{
x[i,]$프로모션정보 = as.character(y[m,]$프로모션정보)
x[i,]$프로모션명칭 = as.character(y[m,]$프로모션명칭)
x[i,]$할인내용 = as.character(y[m,]$할인내용)
raw_data[raw_data$자재코드==n,][i,] = x[i,]
}
}
}
el.time <- proc.time() - ptm
print(el.time)
}
write.csv(raw_data, 'd:/cns_data/(180127)new_data_set.csv')
raw_data
raw_data[complete.cases(raw_data),]
raw_data[!complete.cases(raw_data),] %>% filter(년월일. >20150101)
raw_data
raw_data[!complete.cases(raw_data),] %>% filter(년월일.1 >20150101)
rd = rbind(read.csv('d:/cns_data/rd_2015.csv', stringsAsFactors = F), read.csv('d:/cns_data/rd_2016.csv', stringsAsFactors = F))[,-1]
rd %>% distinct(자재코드)
rd %>% filter(BM != '기타/판촉', BM != 'NC', BM != '해외전용', BM != '중국전용')
rd1 = rd %>% filter(BM != '기타/판촉', BM != 'NC', BM != '해외전용', BM != '중국전용') %>% distinct(자재코드)
rd1
upc = rd1 %>% group_by(UPC = 자재코드, prod_name = 제품명)
rd1 = rd %>% filter(BM != '기타/판촉', BM != 'NC', BM != '해외전용', BM != '중국전용')
upc = rd1 %>% group_by(UPC = 자재코드, prod_name = 제품명)
upc %>% filter(n>100) %>% select(UPC) %>% unlist
upc = rd1 %>% group_by(UPC = 자재코드, prod_name = 제품명) %>% tally()
upc %>% filter(n>100) %>% select(UPC) %>% unlist
upc %>% filter(n>100) %>% select(UPC) %>% unlist
upc %>% filter(n>100) %>% select(UPC)
upc %>% filter(n<=100) %>% select(UPC)
rd %>% filter(판매수량 <= 0 | 매출액 <=0) %>% distinct(자재코드)
raw_data %>% distinct(자재코드)
raw_data
library(ggplot2)
ggplot(rd) +
geom_histogram(aes(x = 유형))
ggplot(rd) +
geom_histogram(aes(x = 유형, stat= 'count'))
ggplot(rd) +
geom_boxplot(aes(x = 유형, stat= 'count'))
library(ggplot2)
ggplot(rd %>% group_by(유형) %>% tally()) +
geom_boxplot(aes(x = 유형, stat= 'count'))
library(ggplot2)
ggplot(rd %>% group_by(유형) %>% tally()) +
geom_boxplot(aes(x = 유형, y = n))
rd %>% group_by(유형) %>% tally()
library(ggplot2)
ggplot(rd %>% group_by(BM) %>% tally()) +
geom_boxplot(aes(x = 유형, y = n))
library(ggplot2)
ggplot(rd %>% group_by(BM) %>% tally()) +
geom_boxplot(aes(x = BM, y = n))
library(ggplot2)
ggplot(rd %>% group_by(BM) %>% tally()) +
geom_histogram(aes(x = BM, stat='count'))
library(ggplot2)
ggplot(rd %>% group_by(BM) %>% tally()) +
geom_histogram(aes(x = BM, stat="count"))
library(ggplot2)
ggplot(rd %>% group_by(BM) %>% tally()) +
geom_histogram(aes(x = BM), stat="count")
rd %>% group_by(BM) %>% tally()
library(ggplot2)
ggplot(rd %>% group_by(BM) %>% tally()) +
geom_barplot(aes(x = BM))
library(ggplot2)
ggplot(rd %>% group_by(BM) %>% tally()) +
geom_bar(aes(x = BM))
ggplot(rd %>% group_by(BM) %>% tally()) +
geom_bar(aes(x = BM))
library(ggplot2)
ggplot(rd %>% group_by(BM) %>% tally()) +
geom_bar(aes(x = BM, y = n))
rd %>% group_by(BM) %>% tally()
library(ggplot2)
ggplot(rd %>% group_by(BM) %>% tally()) +
geom_bar(aes(x = BM, y = n))
library(ggplot2)
ggplot(rd ) +
geom_bar(aes(x = BM))
library(ggplot2)
ggplot(rd ) +
geom_bar(aes(x = BM)) +
grom_bar(aes(x = BM, fill = 'green'), data = raw_data)
library(ggplot2)
ggplot(rd ) +
geom_bar(aes(x = BM)) +
geom_bar(aes(x = BM, fill = 'green'), data = raw_data)
library(ggplot2)
ggplot(rd %>% filter(BM != 'NC', BM != 'VDL', BM!='VOV', BM != '기타/판촉'. BM!= '중국전용', BM !='해외전용')) +
library(ggplot2)
ggplot(rd %>% filter(BM != 'NC', BM != 'VDL', BM!='VOV', BM != '기타/판촉', BM!= '중국전용', BM !='해외전용')) +
geom_bar(aes(x = BM)) +
geom_bar(aes(x = BM, fill = 'green'), data = raw_data)
library(ggplot2)
ggplot(rd %>% filter(BM != 'NC', BM != 'VDL', BM!='VOV', BM != '기타/판촉', BM!= '중국전용', BM !='해외전용')) +
geom_bar(aes(x = BM)) +
geom_bar(aes(x = BM, fill = lightblue), data = raw_data)
library(ggplot2)
ggplot(rd %>% filter(BM != 'NC', BM != 'VDL', BM!='VOV', BM != '기타/판촉', BM!= '중국전용', BM !='해외전용')) +
geom_bar(aes(x = BM)) +
geom_bar(aes(x = BM, fill = 'lightblue'), data = raw_data)
library(ggplot2)
ggplot(rd %>% filter(BM != 'NC', BM != 'VDL', BM!='VOV', BM != '기타/판촉', BM!= '중국전용', BM !='해외전용')) +
geom_bar(aes(x = BM)) +
geom_bar(aes(x = BM, fill = col('lightblue')), data = raw_data)
library(ggplot2)
ggplot(rd %>% filter(BM != 'NC', BM != 'VDL', BM!='VOV', BM != '기타/판촉', BM!= '중국전용', BM !='해외전용')) +
geom_bar(aes(x = BM)) +
geom_bar(aes(x = BM, fill = factor('lightblue')), data = raw_data)
library(ggplot2)
ggplot(rd %>% filter(BM != 'NC', BM != 'VDL', BM!='VOV', BM != '기타/판촉', BM!= '중국전용', BM !='해외전용')) +
geom_bar(aes(x = BM)) +
geom_bar(aes(x = BM, fill = factor(3)), data = raw_data)
library(ggplot2)
ggplot(rd %>% filter(BM != 'NC', BM != 'VDL', BM!='VOV', BM != '기타/판촉', BM!= '중국전용', BM !='해외전용')) +
geom_bar(aes(x = BM)) +
geom_bar(aes(x = BM, fill = 3), data = raw_data)
rm(rd1)
raw_data
raw_data[,2]
library(strinr)
library(stringr)
raw_data[,2]
str_split(raw_data[,2], by= ' ')
str_split(raw_data[,2], sep= ' ')
?str_split(raw_data[,2], sep= ' ')
?str_split(raw_data[,2], pattern= ' ')
str_split(raw_data[,2], pattern= ' ')
str_split(raw_data[i,2], pattern= ' ')[[i]][2]}
for (i in 1:nrow(raw_data2)){str_split(raw_data[i,2], pattern= ' ')[[i]][2]}
for (i in 1:nrow(raw_data)){str_split(raw_data[i,2], pattern= ' ')[[i]][2]}
for (i in 1:nrow(raw_data)){str_split(raw_data[i,2], pattern= ' ')[2]}
apply(raw_data,1,function(x){str_split(x[2])[2]}
apply(raw_data,1,function(x){str_split(x[2])[2]})
apply(raw_data,1,function(x){str_split(x[2])[2]})
apply(raw_data,1,function(x){str_split(x[2], ' ')[2]})
apply(raw_data,1,function(x){str_split(x[2], ' ')[[1]][2]})
mutate(raw_data, '할인행사여부'=apply(raw_data,1,function(x){str_split(x[2], ' ')[[1]][2]}))
raw_data = mutate(raw_data, '할인행사여부'=apply(raw_data,1,function(x){str_split(x[2], ' ')[[1]][2]}))
raw_data
raw_data = raw_data[,c(1,6:9,2,13,3:5, 10:12)]
raw_data
raw_data = raw_data[,c(1:7,10,8,9,11:13)]
raw_data
colnames(raw_data)[1:9] = c('date', 'UPC', 'name', 'unit', 'sales', 'monthly_event', 'promo3', 'category')
raw_data
raw_data %>%arrange(desc(date))
raw_data %>%arrange(desc(date))
raw_data
raw_data %>% arrange(desc(date))
raw_data %>% arrange(date)
raw_data
colnames(raw_data)[10] = 'brand'
raw_data %>% arrange(date)
raw_data
colnames(raw_data)[1:9] = c('date', 'UPC', 'name', 'unit', 'sales', 'monthly_event', 'promo3', 'category', 'brand')
colnames(raw_data)[10] = '라인'
raw_data %>% arrange(desc(date))
coupon = read.csv('d:/cns_data/counpon_date.csv')
coupon = read.csv('d:/cns_data/coupon_date.csv')
coupon
read.csv('d:/cns_data/coupon_date.csv')
coupon = read.csv('d:/cns_data/coupon_date.csv')
coupon
coupon = read.csv('d:/cns_data/coupon_date.csv', header = F)
coupon
coupon = read.csv('d:/cns_data/coupon_date.csv', header = F, stringsAsFactors = F)
coupon = unlist(coupon)
coupon
str_replace(coupon,'-','')
coupon = str_replace(coupon,'-','')
coupon = str_replace(coupon,'-','')
coupon
coupon = as.integer(coupon)
raw_data %>% mutate(coupone_event = apply(raw_data,1,function(x){ifelse(x[1]%in%coupone,1,0)}))
raw_data %>% mutate(coupone_event = apply(raw_data,1,function(x){ifelse(x[1]%in%coupon,1,0)}))
apply(raw_data,1,function(x){ifelse(x[1]%in%coupon,1,0)})
table(apply(raw_data,1,function(x){ifelse(x[1]%in%coupon,1,0)}))
raw_data = raw_data %>% mutate(coupon_event = apply(raw_data,1,function(x){ifelse(x[1]%in%coupon,1,0)}))
raw_data
raw_data = raw_data[,c(1:9,14,10:13)]
raw_data = raw_data %>% mutate(monthly_event = apply(raw_data,1,function(x){ifelse(x[6]=='비할인행사',0,1)}))
raw_data
raw_data %>% filter(monthly_event==0 & coupon_event==0)
raw_data %>% filter(monthly_event==0 & coupon_event==0) %>% distinct(promo3)
raw_data %>% filter(monthly_event==0 & coupon_event==0 & is.na(promo3))
raw_data %>% filter(monthly_event==0 & coupon_event==0 & is.na(promo3)) %>% distinct(promo3)
attach(raw_data)
raw_data[monthly_event==0 & coupon_event==0 & is.na(promo3),]
raw_data[monthly_event==0 & coupon_event==0 & is.na(promo3),]$promo3
raw_data[monthly_event==0 & coupon_event==0 & is.na(promo3),]$promo3 = '정상가'
raw_data
raw_data[is.na(promo3),]
is.na(promo3)
raw_data[is.na(raw_data$promo3),]
raw_data[is.na(raw_data$promo3),]$promo3 = '정상가(이벤트중)'
raw_data
raw_data = raw_data[,c(1:6,10,7:9,11:14)]
raw_data
write.csv(raw_data, 'd:/cns_data/(180127)new_data_set in factor.csv')
rm(list=ls())
rd = rbind(read.csv('d:/cns_data/rd_2015.csv', stringsAsFactors = F), read.csv('d:/cns_data/rd_2016.csv', stringsAsFactors = F))[,-1]
upc = rd %>% group_by(UPC = 자재코드, prod_name = 제품명) %>% tally()
upc %>% filter(n>100) %>% select(UPC) %>% unlist
rd = rd %>% filter(BM != '기타/판촉', BM != 'NC', BM != '해외전용', BM != '중국전용')
upc
upc %>% filter(n>100)
rd %>% filter(판매수량 <= 0 | 매출액 <=0) %>% distinct(자재코드)
upc %>% filter(n>100)
upc_morethan100 = upc %>% filter(n>100) %>% select(UPC) %>% unlist
rd = rd %>% filter(자재코드 %in% upcmorethan100)
rd = rd %>% filter(자재코드 %in% upc_morethan100)
rd %>% distinct(자재코드)
raw_data$프로모션정보 = NA
rd = raw_data
raw_data = rd
raw_data$프로모션정보 = NA
raw_data$프로모션명칭 = NA
raw_data$할인내용 = NA
for (n in unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드]))
{
x = raw_data[raw_data$자재코드==n,]
y = promo[promo$자재코드==n,]
y = y[complete.cases(y),]
ptm <- proc.time()
print(paste(which(n==unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드])),'/ 2752'))
for(i in 1:nrow(x))
{
for (m in 1:nrow(y))
{
if (x[i,1] >= y[m,3] & x[i,1] <= y[m,4])
{
x[i,]$프로모션정보 = as.character(y[m,]$프로모션정보)
x[i,]$프로모션명칭 = as.character(y[m,]$프로모션명칭)
x[i,]$할인내용 = as.character(y[m,]$할인내용)
raw_data[raw_data$자재코드==n,][i,] = x[i,]
}
}
}
el.time <- proc.time() - ptm
print(el.time)
}
promo = read.csv('d:/cns_data/promotion.csv', stringsAsFactors = F)
raw_data$프로모션정보 = NA
raw_data$프로모션명칭 = NA
raw_data$할인내용 = NA
for (n in unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드]))
{
x = raw_data[raw_data$자재코드==n,]
y = promo[promo$자재코드==n,]
y = y[complete.cases(y),]
ptm <- proc.time()
print(paste(which(n==unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드])),'/ 2752'))
for(i in 1:nrow(x))
{
for (m in 1:nrow(y))
{
if (x[i,1] >= y[m,3] & x[i,1] <= y[m,4])
{
x[i,]$프로모션정보 = as.character(y[m,]$프로모션정보)
x[i,]$프로모션명칭 = as.character(y[m,]$프로모션명칭)
x[i,]$할인내용 = as.character(y[m,]$할인내용)
raw_data[raw_data$자재코드==n,][i,] = x[i,]
}
}
}
el.time <- proc.time() - ptm
print(el.time)
}
write.csv(raw_data, 'd:/cns_data/(180127)data_set(2520).csv')
