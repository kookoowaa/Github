geom_hline(aes(yintercept = ridge_coefficients[1,2], linetype = 'pooled ridge')) +
labs(title ='effect of base_price in different ridge models', linetype = 'baseline') +
geom_boxplot(data = base_price_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = base_price, col = 'red')) +
geom_line(aes(y = base_price, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F),
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,3], linetype = 'pooled ridge')) +
labs(title ='effect of sale_event in different ridge models', linetype = 'baseline') +
geom_boxplot(data = sale_event_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = sale_event, col = 'red')) +
geom_line(aes(y = sale_event, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F),
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,4], linetype = 'pooled ridge')) +
labs(title ='effect of promo_addition in different ridge models', linetype = 'baseline') +
geom_boxplot(data = promo_addition_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = promo3_addition, col = 'red')) +
geom_line(aes(y = promo3_addition, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F),
nrow = 3)
beta_check = cbind(lm_coefficients,rbind(NA,bayes_beta[,c(3,15,63)]))
bayes_beta
base_price_MCMC = as.data.frame(t(bayes_draw_2)); colnames(base_price_MCMC) = cat_list; base_price_MCMC = melt(base_price_MCMC)
base_price_MCMC
colnames(base_price_MCMC) = cat_list
cat_list
colnames(base_price_MCMC) = cat_list
cat_list
base_price_MCMC
as.data.frame(t(bayes_draw_2))
base_price_MCMC = as.data.frame(t(bayes_draw_2)); colnames(base_price_MCMC) = cat_list
base_price_MCMC
melt(base_price_MCMC)
base_price_MCMC
library(reshape2)
melt(base_price_MCMC)
base_price_MCMC = as.data.frame(t(bayes_draw_2)); colnames(base_price_MCMC) = cat_list; base_price_MCMC = melt(base_price_MCMC)
bayes_beta
library(gridExtra)
library(reshape2)
test_subject = c('price', 'trendx', 'nat_holiday')
bayes_beta
price_MCMC = as.data.frame(t(bayes_draw_2)); colnames(price_MCMC) = cat_list; base_price_MCMC = melt(price_MCMC)
trendx_MCMC = as.data.frame(t(bayes_draw_21)); colnames(trendx_MCMC) = cat_list; sale_event_MCMC = melt(trendx_MCMC)
holidy_MCMC = as.data.frame(t(bayes_draw_20)); colnames(holiday_MCMC) = cat_list; promo_addition_MCMC = melt(holiday_MCMC)
library(gridExtra)
library(reshape2)
test_subject = c('price', 'trendx', 'nat_holiday')
bayes_beta
price_MCMC = as.data.frame(t(bayes_draw_2)); colnames(price_MCMC) = cat_list; base_price_MCMC = melt(price_MCMC)
trendx_MCMC = as.data.frame(t(bayes_draw_21)); colnames(trendx_MCMC) = cat_list; sale_event_MCMC = melt(trendx_MCMC)
holiday_MCMC = as.data.frame(t(bayes_draw_20)); colnames(holiday_MCMC) = cat_list; promo_addition_MCMC = melt(holiday_MCMC)
ridge_coefficients = as.data.frame(matrix(nrow=length(cat_list)+1, ncol=4))
colnames(ridge_coefficients) = c('category', test_subject)
ridge_coefficients[,1]=c('single',cat_list)
get(paste(ridge_coefficients$category, '_ridge', sep='' ))$coefficients
for (i in 1:nrow(ridge_coefficients)){
for(j in 2:ncol(ridge_coefficients)){
ridge_coefficients[i,j] = coef(get(paste(ridge_coefficients$category, '_ridge', sep='' )[i]))[dimnames(coef(get(paste(ridge_coefficients$category, '_ridge', sep='' )[i])))[[1]]==colnames(ridge_coefficients[j])]
}
}
grid.arrange(
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,2], linetype = 'pooled ridge')) +
labs(title ='effect of base_price in different ridge models', linetype = 'baseline') +
geom_boxplot(data = base_price_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = base_price, col = 'red')) +
geom_line(aes(y = base_price, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F),
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,3], linetype = 'pooled ridge')) +
labs(title ='effect of sale_event in different ridge models', linetype = 'baseline') +
geom_boxplot(data = sale_event_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = sale_event, col = 'red')) +
geom_line(aes(y = sale_event, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F),
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,4], linetype = 'pooled ridge')) +
labs(title ='effect of promo_addition in different ridge models', linetype = 'baseline') +
geom_boxplot(data = promo_addition_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = promo3_addition, col = 'red')) +
geom_line(aes(y = promo3_addition, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F),
nrow = 3)
library(gridExtra)
library(reshape2)
test_subject = c('price', 'trendx', 'nat_holiday')
bayes_beta
price_MCMC = as.data.frame(t(bayes_draw_2)); colnames(price_MCMC) = cat_list; base_price_MCMC = melt(price_MCMC)
trendx_MCMC = as.data.frame(t(bayes_draw_21)); colnames(trendx_MCMC) = cat_list; sale_event_MCMC = melt(trendx_MCMC)
holiday_MCMC = as.data.frame(t(bayes_draw_20)); colnames(holiday_MCMC) = cat_list; promo_addition_MCMC = melt(holiday_MCMC)
ridge_coefficients = as.data.frame(matrix(nrow=length(cat_list)+1, ncol=4))
colnames(ridge_coefficients) = c('category', test_subject)
ridge_coefficients[,1]=c('single',cat_list)
get(paste(ridge_coefficients$category, '_ridge', sep='' ))$coefficients
for (i in 1:nrow(ridge_coefficients)){
for(j in 2:ncol(ridge_coefficients)){
ridge_coefficients[i,j] = coef(get(paste(ridge_coefficients$category, '_ridge', sep='' )[i]))[dimnames(coef(get(paste(ridge_coefficients$category, '_ridge', sep='' )[i])))[[1]]==colnames(ridge_coefficients[j])]
}
}
grid.arrange(
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,2], linetype = 'pooled ridge')) +
labs(title ='effect of base_price in different ridge models', linetype = 'baseline') +
geom_boxplot(data = price_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = price, col = 'red')) +
geom_line(aes(y = price, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F),
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,3], linetype = 'pooled ridge')) +
labs(title ='effect of sale_event in different ridge models', linetype = 'baseline') +
geom_boxplot(data = trendx_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = trendx, col = 'red')) +
geom_line(aes(y = trendx, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F),
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,4], linetype = 'pooled ridge')) +
labs(title ='effect of promo_addition in different ridge models', linetype = 'baseline') +
geom_boxplot(data = holiday_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = nat_holiday_addition, col = 'red')) +
geom_line(aes(y = nat_holiday_addition, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F),
nrow = 3)
price_MCMC
price_MCMC = as.data.frame(t(bayes_draw_2)); colnames(price_MCMC) = cat_list; base_price_MCMC = melt(price_MCMC)
library(gridExtra)
library(reshape2)
test_subject = c('price', 'trendx', 'nat_holiday')
bayes_beta
price_MCMC = as.data.frame(t(bayes_draw_2)); colnames(price_MCMC) = cat_list; price_MCMC = melt(price_MCMC)
trendx_MCMC = as.data.frame(t(bayes_draw_21)); colnames(trendx_MCMC) = cat_list; trendx_MCMC = melt(trendx_MCMC)
holiday_MCMC = as.data.frame(t(bayes_draw_20)); colnames(holiday_MCMC) = cat_list; holiday_MCMC = melt(holiday_MCMC)
ridge_coefficients = as.data.frame(matrix(nrow=length(cat_list)+1, ncol=4))
colnames(ridge_coefficients) = c('category', test_subject)
ridge_coefficients[,1]=c('single',cat_list)
get(paste(ridge_coefficients$category, '_ridge', sep='' ))$coefficients
for (i in 1:nrow(ridge_coefficients)){
for(j in 2:ncol(ridge_coefficients)){
ridge_coefficients[i,j] = coef(get(paste(ridge_coefficients$category, '_ridge', sep='' )[i]))[dimnames(coef(get(paste(ridge_coefficients$category, '_ridge', sep='' )[i])))[[1]]==colnames(ridge_coefficients[j])]
}
}
grid.arrange(
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,2], linetype = 'pooled ridge')) +
labs(title ='effect of base_price in different ridge models', linetype = 'baseline') +
geom_boxplot(data = price_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = price, col = 'red')) +
geom_line(aes(y = price, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F),
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,3], linetype = 'pooled ridge')) +
labs(title ='effect of sale_event in different ridge models', linetype = 'baseline') +
geom_boxplot(data = trendx_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = trendx, col = 'red')) +
geom_line(aes(y = trendx, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F),
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,4], linetype = 'pooled ridge')) +
labs(title ='effect of promo_addition in different ridge models', linetype = 'baseline') +
geom_boxplot(data = holiday_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = nat_holiday_addition, col = 'red')) +
geom_line(aes(y = nat_holiday_addition, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F),
nrow = 3)
grid.arrange(
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,2], linetype = 'pooled ridge')) +
labs(title ='effect of base_price in different ridge models', linetype = 'baseline') +
geom_boxplot(data = price_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = price, col = 'red')) +
geom_line(aes(y = price, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F),
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,3], linetype = 'pooled ridge')) +
labs(title ='effect of sale_event in different ridge models', linetype = 'baseline') +
geom_boxplot(data = trendx_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = trendx, col = 'red')) +
geom_line(aes(y = trendx, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F),
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,4], linetype = 'pooled ridge')) +
labs(title ='effect of promo_addition in different ridge models', linetype = 'baseline') +
geom_boxplot(data = holiday_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = nat_holiday, col = 'red')) +
geom_line(aes(y = nat_holiday, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F),
nrow = 3)
grid.arrange(
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,2], linetype = 'pooled ridge')) +
labs(title ='effect of base_price in different ridge models', linetype = 'baseline') +
geom_boxplot(data = price_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = price, col = 'red')) +
geom_line(aes(y = price, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F),
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,3], linetype = 'pooled ridge')) +
labs(title ='effect of sale_event in different ridge models', linetype = 'baseline') +
geom_boxplot(data = trendx_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = trendx, col = 'red')) +
geom_line(aes(y = trendx, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F),
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,4], linetype = 'pooled ridge')) +
labs(title ='effect of promo_addition in different ridge models', linetype = 'baseline') +
geom_boxplot(data = holiday_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = nat_holiday, col = 'red')) +
geom_line(aes(y = nat_holiday, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F),
nrow = 3)
library(gridExtra)
library(reshape2)
test_subject = c('price', 'trendx', 'nat_holiday')
bayes_beta
price_MCMC = as.data.frame(t(bayes_draw_2)); colnames(price_MCMC) = cat_list; price_MCMC = melt(price_MCMC)
trendx_MCMC = as.data.frame(t(bayes_draw_21)); colnames(trendx_MCMC) = cat_list; trendx_MCMC = melt(trendx_MCMC)
holiday_MCMC = as.data.frame(t(bayes_draw_20)); colnames(holiday_MCMC) = cat_list; holiday_MCMC = melt(holiday_MCMC)
ridge_coefficients = as.data.frame(matrix(nrow=length(cat_list)+1, ncol=4))
colnames(ridge_coefficients) = c('category', test_subject)
ridge_coefficients[,1]=c('single',cat_list)
get(paste(ridge_coefficients$category, '_ridge', sep='' ))$coefficients
for (i in 1:nrow(ridge_coefficients)){
for(j in 2:ncol(ridge_coefficients)){
ridge_coefficients[i,j] = coef(get(paste(ridge_coefficients$category, '_ridge', sep='' )[i]))[dimnames(coef(get(paste(ridge_coefficients$category, '_ridge', sep='' )[i])))[[1]]==colnames(ridge_coefficients[j])]
}
}
grid.arrange(
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,2], linetype = 'pooled ridge')) +
labs(title ='effect of price in different ridge models', linetype = 'baseline') +
geom_boxplot(data = price_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = price, col = 'red')) +
geom_line(aes(y = price, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F)+
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, hjust=1)),
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,3], linetype = 'pooled ridge')) +
labs(title ='effect of trend in different ridge models', linetype = 'baseline') +
geom_boxplot(data = trendx_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = trendx, col = 'red')) +
geom_line(aes(y = trendx, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F)+
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, hjust=1)),
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,4], linetype = 'pooled ridge')) +
labs(title ='effect of holiday in different ridge models', linetype = 'baseline') +
geom_boxplot(data = holiday_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = nat_holiday, col = 'red')) +
geom_line(aes(y = nat_holiday, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, hjust=1)),
nrow = 3)
grid.arrange(
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,2], linetype = 'pooled ridge')) +
labs(title ='effect of price in different ridge models', linetype = 'baseline') +
geom_boxplot(data = price_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = price, col = 'red')) +
geom_line(aes(y = price, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F)+
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, hjust=1)),
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,3], linetype = 'pooled ridge')) +
labs(title ='effect of trend in different ridge models', linetype = 'baseline') +
geom_boxplot(data = trendx_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = trendx, col = 'red')) +
geom_line(aes(y = trendx, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F)+
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, hjust=1)),
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,4], linetype = 'pooled ridge')) +
labs(title ='effect of holiday in different ridge models', linetype = 'baseline') +
geom_boxplot(data = holiday_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = nat_holiday, col = 'red')) +
geom_line(aes(y = nat_holiday, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, hjust=1)),
nrow = 3)
grid.arrange(
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,2], linetype = 'pooled ridge')) +
labs(title ='effect of price in different ridge models', linetype = 'baseline') +
geom_boxplot(data = price_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = price, col = 'red')) +
geom_line(aes(y = price, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F)+
theme(text = element_text(size=5),
axis.text.x = element_text(angle=90, hjust=1)),
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,3], linetype = 'pooled ridge')) +
labs(title ='effect of trend in different ridge models', linetype = 'baseline') +
geom_boxplot(data = trendx_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = trendx, col = 'red')) +
geom_line(aes(y = trendx, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F)+
theme(text = element_text(size=5),
axis.text.x = element_text(angle=90, hjust=1)),
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,4], linetype = 'pooled ridge')) +
labs(title ='effect of holiday in different ridge models', linetype = 'baseline') +
geom_boxplot(data = holiday_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = nat_holiday, col = 'red')) +
geom_line(aes(y = nat_holiday, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F) +
theme(text = element_text(size=5),
axis.text.x = element_text(angle=90, hjust=1)),
nrow = 3)
grid.arrange(
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,2], linetype = 'pooled ridge')) +
labs(title ='effect of price in different ridge models', linetype = 'baseline') +
geom_boxplot(data = price_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = price, col = 'red')) +
geom_line(aes(y = price, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F)+
theme(text = element_text(size=7),
axis.text.x = element_text(angle=90, hjust=1)),
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,3], linetype = 'pooled ridge')) +
labs(title ='effect of trend in different ridge models', linetype = 'baseline') +
geom_boxplot(data = trendx_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = trendx, col = 'red')) +
geom_line(aes(y = trendx, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F)+
theme(text = element_text(size=7),
axis.text.x = element_text(angle=90, hjust=1)),
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,4], linetype = 'pooled ridge')) +
labs(title ='effect of holiday in different ridge models', linetype = 'baseline') +
geom_boxplot(data = holiday_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = nat_holiday, col = 'red')) +
geom_line(aes(y = nat_holiday, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F) +
theme(text = element_text(size=7),
axis.text.x = element_text(angle=90, hjust=1)),
nrow = 3)
grid.arrange(
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,2], linetype = 'pooled ridge')) +
labs(title ='effect of price in different ridge models', linetype = 'baseline') +
geom_boxplot(data = price_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = price, col = 'red')) +
geom_line(aes(y = price, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F)+
theme(text = element_text(size=10),
axis.text.x = element_text(angle=45, hjust=1)),
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,3], linetype = 'pooled ridge')) +
labs(title ='effect of trend in different ridge models', linetype = 'baseline') +
geom_boxplot(data = trendx_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = trendx, col = 'red')) +
geom_line(aes(y = trendx, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F)+
theme(text = element_text(size=10),
axis.text.x = element_text(angle=45, hjust=1)),
ggplot(ridge_coefficients[-1,], aes(x = category)) +
geom_hline(aes(yintercept = ridge_coefficients[1,4], linetype = 'pooled ridge')) +
labs(title ='effect of holiday in different ridge models', linetype = 'baseline') +
geom_boxplot(data = holiday_MCMC, aes(x = variable, y = value, fill= 'a')) +
geom_point(aes(y = nat_holiday, col = 'red')) +
geom_line(aes(y = nat_holiday, col = 'red', group = 1)) +
scale_fill_brewer(palette = 'Pastel2')+
guides(col=FALSE, fill = F, size = F) +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=45, hjust=1)),
nrow = 3)
for (i in 1:length(cat_list)) {
temp = single_test[single_test[,i+77]==1,-c(4,24:26,78:136)]
nobs = nrow(temp)
iota = c(rep(1,nobs))
X = as.matrix(cbind(iota,temp[,-c(1:3)]))
a = X %*% t(as.matrix(bayes_beta[i,2:63]))
colnames(a) = 'prediction'
assign(paste(cat_list[i], '_bayes_test', sep=''), cbind(temp[,c(1:3)],exp(a)))
}
bayes_beta
for (i in 1:length(cat_list)) {
temp = single_test[single_test[,i+77]==1,-c(4,24:26,78:136)]
nobs = nrow(temp)
iota = c(rep(1,nobs))
X = as.matrix(cbind(iota,temp[,-c(1:3)]))
a = X %*% t(as.matrix(bayes_beta[i,2:72]))
colnames(a) = 'prediction'
assign(paste(cat_list[i], '_bayes_test', sep=''), cbind(temp[,c(1:3)],exp(a)))
}
bayes_test = rbind(get(paste(cat_list, '_bayes_test', sep='')))
bayes_result = as.data.frame(matrix(ncol = 4, nrow = 11))
rownames(bayes_result) = c( cat_list, 'MEAN')
bayes_result = as.data.frame(matrix(ncol = 4, nrow = length(cat_list)+1))
rownames(bayes_result) = c( cat_list, 'MEAN')
colnames(bayes_result) = c('bayes_total', 'bayes_day', 'bayes_week', 'bayes_month')
for(i in 1:length(cat_list)){
b = get(paste(cat_list[i], '_bayes_test', sep=''))
a = b  %>% mutate(week = (as.numeric(date) %/% 7-2422), month = as.numeric(apply(b, 1, function(x){str_split(x[2], '-')[[1]][2]})))
bayes_result[i,1] = a %>% group_by(UPC) %>% summarize(y = sum(volume), yhat = sum(prediction), pe = abs(y-yhat)/y) %>% summarize(mean(pe)) %>% unlist
bayes_result[i,2] = a  %>% mutate( pe = abs(volume-prediction)/volume) %>% summarize(mean(pe)) %>% unlist
z = a %>% group_by(UPC, week) %>% summarize(y = sum(volume), yhat = sum(prediction), pe = abs(y-yhat)/y)
bayes_result[i,3] = mean(z$pe)
z = a %>% group_by(UPC, month) %>% summarize(y = sum(volume), yhat = sum(prediction), pe = abs(y-yhat)/y)
bayes_result[i,4] = mean(z$pe)
}
bayes_result = as.data.frame(matrix(ncol = 4, nrow = length(cat_list)+1))
rownames(bayes_result) = c( cat_list, 'MEAN')
colnames(bayes_result) = c('bayes_total', 'bayes_day', 'bayes_week', 'bayes_month')
for(i in 1:length(cat_list)){
b = get(paste(cat_list[i], '_bayes_test', sep=''))
a = b  %>% mutate(week = (as.numeric(date) %/% 7-2422), month = as.numeric(apply(b, 1, function(x){str_split(x[2], '-')[[1]][2]})))
bayes_result[i,1] = a %>% group_by(UPC) %>% summarize(y = sum(unit), yhat = sum(prediction), pe = abs(y-yhat)/y) %>% summarize(mean(pe)) %>% unlist
bayes_result[i,2] = a  %>% mutate( pe = abs(unit-prediction)/unit) %>% summarize(mean(pe)) %>% unlist
z = a %>% group_by(UPC, week) %>% summarize(y = sum(unit), yhat = sum(prediction), pe = abs(y-yhat)/y)
bayes_result[i,3] = mean(z$pe)
z = a %>% group_by(UPC, month) %>% summarize(y = sum(unit), yhat = sum(prediction), pe = abs(y-yhat)/y)
bayes_result[i,4] = mean(z$pe)
}
bayes_result[11,] = apply(bayes_result[-11,], 2, mean)
bayes_result
bayes_result[nrow(bayes_result),] = apply(bayes_result[-nrow(bayes_result),], 2, mean)
bayes_result
bayes_result = as.data.frame(matrix(ncol = 4, nrow = length(cat_list)+1))
rownames(bayes_result) = c( cat_list, 'MEAN')
colnames(bayes_result) = c('bayes_total', 'bayes_day', 'bayes_week', 'bayes_month')
for(i in 1:length(cat_list)){
b = get(paste(cat_list[i], '_bayes_test', sep=''))
a = b  %>% mutate(week = (as.numeric(date) %/% 7-2422), month = as.numeric(apply(b, 1, function(x){str_split(x[2], '-')[[1]][2]})))
bayes_result[i,1] = a %>% group_by(UPC) %>% summarize(y = sum(unit), yhat = sum(prediction), pe = abs(y-yhat)/y) %>% summarize(mean(pe)) %>% unlist
bayes_result[i,2] = a  %>% mutate( pe = abs(unit-prediction)/unit) %>% summarize(mean(pe)) %>% unlist
z = a %>% group_by(UPC, week) %>% summarize(y = sum(unit), yhat = sum(prediction), pe = abs(y-yhat)/y)
bayes_result[i,3] = mean(z$pe)
z = a %>% group_by(UPC, month) %>% summarize(y = sum(unit), yhat = sum(prediction), pe = abs(y-yhat)/y)
bayes_result[i,4] = mean(z$pe)
}
bayes_result[nrow(bayes_result),] = apply(bayes_result[-nrow(bayes_result),], 2, mean)
bayes_result
-nrow(bayes_result)+1
bayes_result = as.data.frame(matrix(ncol = 4, nrow = length(cat_list)+2))
rownames(bayes_result) = c( cat_list, 'MEAN', 'precision')
colnames(bayes_result) = c('bayes_total', 'bayes_day', 'bayes_week', 'bayes_month')
for(i in 1:length(cat_list)){
b = get(paste(cat_list[i], '_bayes_test', sep=''))
a = b  %>% mutate(week = (as.numeric(date) %/% 7-2422), month = as.numeric(apply(b, 1, function(x){str_split(x[2], '-')[[1]][2]})))
bayes_result[i,1] = a %>% group_by(UPC) %>% summarize(y = sum(unit), yhat = sum(prediction), pe = abs(y-yhat)/y) %>% summarize(mean(pe)) %>% unlist
bayes_result[i,2] = a  %>% mutate( pe = abs(unit-prediction)/unit) %>% summarize(mean(pe)) %>% unlist
z = a %>% group_by(UPC, week) %>% summarize(y = sum(unit), yhat = sum(prediction), pe = abs(y-yhat)/y)
bayes_result[i,3] = mean(z$pe)
z = a %>% group_by(UPC, month) %>% summarize(y = sum(unit), yhat = sum(prediction), pe = abs(y-yhat)/y)
bayes_result[i,4] = mean(z$pe)
}
bayes_result[nrow(bayes_result)-1,] = apply(bayes_result[-nrow(bayes_result)+1,], 2, mean)
bayes_result[nrow(bayes_result),] = 1 - bayes_result[nrow(bayes_result)-1,]
bayes_result
bayes_result = as.data.frame(matrix(ncol = 4, nrow = length(cat_list)+2))
rownames(bayes_result) = c( cat_list, 'MEAN', 'precision')
colnames(bayes_result) = c('bayes_total', 'bayes_day', 'bayes_week', 'bayes_month')
for(i in 1:length(cat_list)){
b = get(paste(cat_list[i], '_bayes_test', sep=''))
a = b  %>% mutate(week = (as.numeric(date) %/% 7-2422), month = as.numeric(apply(b, 1, function(x){str_split(x[2], '-')[[1]][2]})))
bayes_result[i,1] = a %>% group_by(UPC) %>% summarize(y = sum(unit), yhat = sum(prediction), pe = abs(y-yhat)/y) %>% summarize(mean(pe)) %>% unlist
bayes_result[i,2] = a  %>% mutate( pe = abs(unit-prediction)/unit) %>% summarize(mean(pe)) %>% unlist
z = a %>% group_by(UPC, week) %>% summarize(y = sum(unit), yhat = sum(prediction), pe = abs(y-yhat)/y)
bayes_result[i,3] = mean(z$pe)
z = a %>% group_by(UPC, month) %>% summarize(y = sum(unit), yhat = sum(prediction), pe = abs(y-yhat)/y)
bayes_result[i,4] = mean(z$pe)
}
bayes_result[(nrow(bayes_result)-1),] = apply(bayes_result[(-nrow(bayes_result)+1),], 2, mean)
bayes_result[nrow(bayes_result),] = 1 - bayes_result[nrow(bayes_result)-1,]
bayes_result
bayes_result[(nrow(bayes_result)-1),] = apply(bayes_result[(-nrow(bayes_result)+1):-nrow(bayes_result),], 2, mean)
bayes_result[nrow(bayes_result),] = 1 - bayes_result[nrow(bayes_result)-1,]
bayes_result
write.csv(result, 'd:/cns_data/180131modeling_by_cat.csv')
hist(log(rd$trendx))
hist(rd$trendx)
barplot(rd$trendx)
