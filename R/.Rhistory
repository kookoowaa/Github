}
}
merge_promo(raw_data, promo)
raw_data
merge_promo = function(x, y){
for (i in 1:nrow(y)){
for (l in 1:nrow(x)){
if(y[i,1] < x[l,1] & y[i,2] >x[l,1]){
x[y[i,4]==x[l,6],c(12,13)] = y[i,c(3,5)]
}
}
}
}
merge_promo(raw_data, promo)
raw_data[1,1]
raw_data
merge_promo = function(x, y){
for (i in 1:nrow(y)){
for (l in 1:nrow(x)){
if(y[i,1] < x[l,1] & y[i,2] >x[l,1]){
x[y[i,4]==x[l,6],c(12,13)] = y[i,c(3,5)]
}
}
}
}
raw_data[1,c(12,13)] = promo[1,c(2,1)]
promo[1,c(2,1)]
raw_data[1,c(12,13)]
raw_data[1,13] = 1
raw_data[1,c(12,13)] = promo[1,c(2,1)]
merge_promo = function(x, y){
for (i in 1:nrow(y)){
for (l in 1:nrow(x)){
if(y[i,1] < x[l,1] & y[i,2] >x[l,1]){
x[y[i,4]==x[l,6],c(12,13)] = y[i,c(3,5)]
}
}
}
}
merge_promo(raw_data, promo)
raw_data
is.na(raw_data[:,12])
is.na(raw_data[,12])
table(!is.na(raw_data[,12]))
for (i in 1:nrow(promo)){
for (l in 1:nrow(raw_data)){
if(promo[i,1] < raw_data[l,1] & promo[i,2] >raw_data[l,1]){
raw_data[promo[i,4]==raw_data[l,6],c(12,13)] = promo[i,c(3,5)]
}
}
}
raw_data
table(!is.na(raw_data[,12]))
select(raw_data, 자재코드 == 30500032)
select(raw_data$자재코드 == 30500032)
filter(raw_data, 자재코드 == 30500032)
filter(raw_data, 자재코드 == 30100060)
filter(raw_data, 자재코드 == 30100061)
filter(raw_data, 자재코드 == 30500032)
filter(promo, 자재코드 == 30500032)
filter(raw_data, 자재코드 == 30500032)
filter(promo, 자재코드 == 32000160)
filter(raw_data, 자재코드 == 32000160)
arrange(raw_data, desc(매출액))
filter(promo, 자재코드 == 34200891)
filter(raw_data, 자재코드 == 32000160)
filter(promo, 자재코드 == 32000160)
unique(promo$할인내용)
table(promo$할인내용)
promo[promo$할인내용 == '1+1',]
filter(raw_data, 자재코드 == 34350011)
table(raw_data$할인행사여부)
read.csv('d:/cns_data/sales_2016.csv')
raw_data = rbind(read.csv('d:/cns_data/sales_2015.csv'), read.csv('d:/cns_data/sales_2016.csv'))
raw_data = raw_data[!is.na(raw_data$년월일),2:12]
raw_data
promo = strsplit(as.character(raw_data$할인행사여부), ' ')
promo1 = list()
for (i in 1:length(promo)){
promo1[i] = promo[[i]][2]
}
promo1 = as.factor(unlist(promo1))
raw_data$할인행사여부 = promo1
rm('promo', 'promo1')
raw_data
date = raw_data$년월일.1
year = as.factor(substr(date,1,4))
month = as.factor(substr(date, 5, 6))
date = as.factor(substr(date, 7, 8))
raw_data = data.frame(year, month, date, raw_data[,-1])
rm('year', 'month', 'date')
raw_data
promo = read.csv('d:/cns_data/promotion.csv')
promo = promo[promo$프로모션시작일>20150000 & promo$프로모션종료일<20160831,]
promo = promo[,c(3,4,7,8,9)]
promo
raw_data
raw_data[1,c(12,13)] = promo[1,c(2,1)]
merge_promo = function(x, y){
for (i in 1:nrow(y)){
for (l in 1:nrow(x)){
if(y[i,4]==x[l,6]){
filter(x, 자재코드 == y[i,4])
}
}
}
}
filter(promo, 자재코드 == 32000160)
s15 = read.csv('d:/cns_data/sales_2015.csv')
s16 = read.csv('d:/cns_data/sales_2016.csv')
p15 = unique(s15$자재코드)
p16 = unique(s16$자재코드)
p15 == p16
p15 %in% p16
p15[p15 %in% p16]
length(p15[p15 %in% p16])
length(p15 %in% p16)
p15[
prod = p15[p15 %in% p16]
s15
s15
s15[s15$년월일.1>20150630,]
s151 = s15[s15$년월일.1>20150630,]
s151$자재코드 %in% p16
table(s151$자재코드 %in% p16)
table(unique(s151$자재코드) %in% p16)
length(prod)
prod
prod = p15[p15 %in% p16]
length(prod)
length(p15+p16)
raw_data = rbind(read.csv('d:/cns_data/sales_2015.csv'), read.csv('d:/cns_data/sales_2016.csv'))
rd = rbind(s15, s16)
View(raw_data)
rm(raw_data)
unique(rd$자재코드)
rd1 = rd[prod %in% rd$자재코드, ]
rd1 = rd[rd$자재코드 %in% prod, ]
rd
library(dplyr)
rd1 %>% group_by(자재코드)
rd1
rd1 %>% group_by(자재코드) %>% select(판매수량)
rd1 %>%  select(판매수량) %>%group_by(자재코드)
rd1 %>%  select(c(판매수량,자재코드)) %>%group_by(자재코드)
rd1 %>%  select(c(판매수량,자재코드)) %>%group_by(자재코드) %>% summarize(sum)
rd1 %>%  select(c(판매수량,자재코드)) %>%group_by(자재코드) %>% summarize()
rd1 %>%group_by(자재코드) %>% summarize(sum(판매수량))
rd1 %>%group_by(자재코드) %>% summarize(sum(판매수량), sum(매출액))
rd1[rd1$자재코드==27955,]
rd1[rd1$자재코드==27955,]
rd1[rd1$자재코드==661470,]
rd1$자재코드 == 661470
rd1[rd1$자재코드 == 661470,]
rd1[rd1$자재코드 == 661470,]
rd1[(rd1$자재코드 == 661470),]
table(rd1$자재코드 == 661470,)
table(rd1$자재코드 == 661470)
rd1[rd1$자재코드 == 661470,]
rd1 %>%group_by(자재코드) %>% summarize(sum(판매수량), sum(매출액, count()))
rd1 %>%group_by(자재코드) %>% summarize(sum(판매수량), sum(매출액), count)
rd1 %>%group_by(자재코드) %>% summarize(sum(판매수량), sum(매출액), count())
rd1 %>%group_by(자재코드) %>% summarize(sum(판매수량), sum(매출액), tally())
rd1 %>%group_by(자재코드) %>% summarize(sum(판매수량), sum(매출액))
complete.cases(rd1[rd1$자재코드 == 661470,])
rd1[complete.cases(rd1[rd1$자재코드 == 661470,]),]
rd1[rd1$자재코드 == 661470,]
complete.cases(rd1)
rd1[!complete.cases(rd1),]
rd1[is.na(rd1$자재코드),]
rd1[!is.na(rd1$자재코드),]
rd1 = rd1[!is.na(rd1$자재코드),]
rd1[rd1$자재코드 == 661470,]
aggr = rd1 %>%group_by(자재코드) %>% summarize(sum(판매수량), sum(매출액))
arrange(aggr, by = 매출)
arrange(aggr, by = 매출)
arrange(aggr, by = 매출액)
aggr %>% arrange(desc(매출액))
aggr
aggr %>% arrange(desc(sum(매출액)))
aggr = rd1 %>%group_by(자재코드) %>% summarize(volume = sum(판매수량), sales = sum(매출액))
aggr %>% arrange(desc(sales))
rd1[rd1$자재코드 == 30100276,]
aggr = rd1 %>%group_by(prod_num = 자재코드, prod_name = 제품명) %>% summarize(volume = sum(판매수량), sales = sum(매출액))
aggr %>% arrange(desc(sales))
aggr = rd1 %>%group_by(prod_num = 자재코드, prod_name = 제품명, BM) %>% summarize(volume = sum(판매수량), sales = sum(매출액))
aggr %>% arrange(desc(sales))
rd1
unique(aggr$prod_name)
length(unique(aggr$prod_name))
length(unique(aggr$prod_num))
aggr = rd1 %>%group_by(prod_num = 자재코드, BM) %>% summarize(volume = sum(판매수량), sales = sum(매출액))
aggr %>% arrange(desc(sales))
aggr = rd1 %>%group_by(prod_num = 자재코드, BM) %>% summarize(prod_name = 제품명, volume = sum(판매수량), sales = sum(매출액))
aggr = rd1 %>%group_by(prod_num = 자재코드, BM) %>% summarize(prod_name = 제품명[1], volume = sum(판매수량), sales = sum(매출액))
aggr %>% arrange(desc(sales))
aggr = aggr %>% arrange(desc(sales))
write.csv(aggr)
getwd()
write.csv(aggr, 'd:/cns_data/aggr.csv')
cmdscale(aggr)
aggr
cmdscale(aggr[,4:5])
plot(aggr[,4],aggr[,5])
aggr[,4]
plot(c(aggr[,4],aggr[,5])
plot(c(aggr[,4],aggr[,5])
plot(c(aggr[,4],aggr[,5]))
plot(c(aggr[,4],aggr[,5]))
aggrcmd = aggr[,4:5]
aggrcmd
plot(aggrcmd)
cmdscale(aggrcmd)
cmdscale(aggrcmd, k = 1)
library(MASS)
eurodist
prcomp(aggrcmd)
plot(prcomp(aggrcmd))
aggr
aggr$prod_name[:0.1*length(aggr)]
aggr$prod_name[1:0.1*length(aggr)]
aggr$prod_num[1:0.1*length(aggr)]
aggr$prod_num[1:0.1*length(aggr$prod_num)]
0.1*length(aggr$prod_num)
aggr$prod_num
aggr$prod_num[1:(0.1*length(aggr$prod_num))]
aggr_by_sales = aggr$prod_num[1:(0.1*length(aggr$prod_num))]
aggr = aggr %>% arrange(desc(volume))
aggr_by_volume = aggr$prod_num[1:(0.1*length(aggr$prod_num))]
aggr_by_sales %in% aggr_by_volume
aggr_by_sales[aggr_by_sales %in% aggr_by_volume]
length(aggr_by_sales[aggr_by_sales %in% aggr_by_volume])
rd
rd %>%group_by(prod_num = 자재코드, BM) %>% summarize(prod_name = 제품명[1], volume = sum(판매수량), sales = sum(매출액), relev = 분석대상[1])
rd2 = rd %>%group_by(prod_num = 자재코드) %>% summarize(prod_name = 제품명[1], volume = sum(판매수량), sales = sum(매출액), relev = 분석대상[1])
table(rd2$relev)
rd %>%group_by(prod_num = 자재코드) %>% summarize(prod_name = 제품명[1], volume = sum(판매수량), sales = sum(매출액), relev = count(분석대상))
rd %>%group_by(prod_num = 자재코드) %>% summarize(prod_name = 제품명[1], volume = sum(판매수량), sales = sum(매출액), relev = count(as.integer(분석대상)))
rd %>%group_by(prod_num = 자재코드) %>% summarize(prod_name = 제품명[1], volume = sum(판매수량), sales = sum(매출액), relev = count(as.numeric(분석대상)))
unique(complete.cases(rd)$자재코드)
complete.cases(rd)
unique(rd[complete.cases(rd),]$자재코드)
rd[complete.cases(rd),]
unique(rd[rd$분석대상=='Y',]$자재코드)
rd[rd$분석대상=='Y'
rd[rd$분석대상=='Y',]
rd[rd$분석대상=='Y',]
unique(rd[rd$분석대상=='Y',]$자재코드)
aggr = aggr %>% arrange(desc(sales))
aggr_by_sales = aggr$prod_num[1:(0.25*length(aggr$prod_num))]
aggr = aggr %>% arrange(desc(volume))
aggr_by_volume = aggr$prod_num[1:(0.25*length(aggr$prod_num))]
length(aggr_by_sales[aggr_by_sales %in% aggr_by_volume])
aggr = aggr %>% arrange(desc(sales))
aggr_by_sales = aggr$prod_num[1:(0.5*length(aggr$prod_num))]
aggr = aggr %>% arrange(desc(volume))
aggr_by_volume = aggr$prod_num[1:(0.5*length(aggr$prod_num))]
length(aggr_by_sales[aggr_by_sales %in% aggr_by_volume])
length(unique(rd[rd$분석대상=='Y',]$자재코드))
Sys.getlocale()
aggr_by_sales[aggr_by_sales %in% aggr_by_volume]
aggr[aggr$prod_num %in% aggr_by_sales[aggr_by_sales %in% aggr_by_volume, ]
aggr[aggr$prod_num %in% aggr_by_sales[aggr_by_sales %in% aggr_by_volume, ]
aggr[aggr$prod_num %in% aggr_by_sales[aggr_by_sales %in% aggr_by_volume, ]
aggr[aggr$prod_num %in% aggr_by_sales[aggr_by_sales %in% aggr_by_volume, ]]
aggr[aggr$prod_num %in% aggr_by_sales[aggr_by_sales %in% aggr_by_volume, ]]
aggr[aggr$prod_num %in% aggr_by_sales[aggr_by_sales %in% aggr_by_volume],]
aggr1 = aggr[aggr$prod_num %in% aggr_by_sales[aggr_by_sales %in% aggr_by_volume],]
write.csv(aggr1, 'd:/cns_data/aggr1.csv')
unique(rd$자재코드)
length(unique(rd$자재코드))
max(rd$년월일.1)
rd$년월일.1
arrange(desc(rd$년월일.1))
arrange(dr, desc(년월일.1))
arrange(rd, desc(년월일.1))
length(unique(rd$자재코드))
length(unique(rd[rd$분석대상=='Y',]$자재코드))
unique(rd[rd$분석대상=='Y',]$자재코드)
unique(rd[rd$분석대상=='Y',]$자재코드) %in% unique(aggr1$prod_num)
table(unique(rd[rd$분석대상=='Y',]$자재코드) %in% unique(aggr1$prod_num))
table(unique(aggr1$prod_num) %in% unique(rd[rd$분석대상=='Y',]$자재코드) )
length(unique(aggr1$prod_num))
table(unique(rd[rd$분석대상=='Y',]$자재코드) %in% unique(aggr1$prod_num) )
aggr_y = rd[rd$분석대상=='Y',] %>% group_by(prod_num = 자재코드, BM) %>% summarize(prod_name = 제품명[1], volume = sum(판매수량), sales = sum(매출액))
aggr_y = aggr_y %>% arrange(desc(sales))
aggr_y
aggr_y = aggr_y %>% arrange(sales)
aggr_y
length(unique(rd1$자재코드))
length(unique(aggr1$prod_num))
unique(aggr1$prod_num)
unique(is.na(aggr1$prod_num))
rm(aggrcmd)
aggr1
unique(aggr1$prod_num)
uniq_prod_num = unique(aggr1$prod_num)
[1,2] %in% [1,2,3]
([1,2] %in% [1,2,3])
(c(1,2) %in% c(1,2,3))
rd[rd$자재코드 %in% uniq_prod_num, ]
39900777 %in% uniq_prod_num
raw_data = rd[rd$자재코드 %in% uniq_prod_num, ]
raw_data
write.csv(raw_data, 'd:/cns_data/raw_data.csv')
raw_data = rd[rd$자재코드 %in% uniq_prod_num, -1]
raw_data
promo = strsplit(as.character(raw_data$할인행사여부), ' ')
promo1 = list()
for (i in 1:length(promo)){
promo1[i] = promo[[i]][2]
}
promo1 = as.factor(unlist(promo1))
raw_data$할인행사여부 = promo1
rm('promo', 'promo1')
raw_data
summary(raw_data$할인행사여부)
colnames(raw_data)
colnames(raw_data)[1]
colnames(raw_data)[1] = '년월일'
colnames(raw_data)
raw_data = raw_data[,-11]
colnames(raw_data)
write.csv(raw_data, 'd:/cns_data/raw_data.csv')
raw_data
barplot(raw_data$할인행사여부)
barplot(table(raw_data$할인행사여부))
barplot(table(raw_data$할인행사여부), col = c(1,2))
barplot(table(raw_data$할인행사여부), col = c(2,4))
table(raw_data$할인행사여부)
Sys.setlocale('english')
Sys.setlocale('English')
Sys.setlocale(English)
Sys.setlocale(category = "LC_ALL", locale = "us")
table(raw_data$할인행사여부)
Sys.setlocale(category = "LC_ALL", locale = "KR")
Sys.setlocale("LC_ALL", "ko_KR.UTF-8")
table(raw_data$할인행사여부)
Sys.setlocale("LC_ALL", "ko_KR")
Sys.setlocale("LC_ALL", "KR")
table(raw_data$할인행사여부)
raw_data
raw_data = read.csv('d:/cns_data/raw_data.csv')
table(raw_data$할인행사여부)
Sys.setlocale("LC_ALL", "ko_KR.UTF-8")
table(raw_data$할인행사여부)
Sys.getlocale()
table(raw_data$할인행사여부)
table(raw_data$할인행사여부)
table(raw_data$X)
raw_data$X
raw_data
raw_data = read.csv('d:/cns_data/raw_data.csv')[,-1]
raw_data
library(dplyr)
raw_data %>% group_by(년월일) %>% summarize(volume = sum(판매수량), sales = sum(매출액))
aggr_by_date = raw_data %>% group_by(년월일) %>% summarize(volume = sum(판매수량), sales = sum(매출액))
plot(aggr_by_date$sales)
plot(aggr_by_date$sales, type = 'l')
library(ggplot2)
ggplot(data = aggr_by_date)
ggplot(data = aggr_by_date)+
geom_point(aes(x = 년월일, y = sales))
aggr_by_date
as.Date(raw_data$년월일)
as.Date(raw_data$년월일, format = "%Y%m%d"")
table(raw_data)
as.Date(raw_data$년월일, format = "%Y%m%d")
as.Date(raw_data$년월일, format = "%Y%m%d")
as.Date(as.character(raw_data$년월일), format = "%Y%m%d")
as.character(raw_data$년월일)
raw_data = read.csv('d:/cns_data/raw_data.csv')[,-1]
as.Date(aggr_by_date$년월일)
as.Date(as.character(aggr_by_date$년월일))
as.Date(as.character(aggr_by_date$년월일), format = '%Y%m%d')
aggr_by_date$년월일 = as.Date(as.character(aggr_by_date$년월일), format = '%Y%m%d')
ggplot(data = aggr_by_date)+
geom_point(aes(x = 년월일, y = sales))
ggplot(data = aggr_by_date)+
geom_line(aes(x = 년월일, y = sales))
ggplot(data = aggr_by_date)+
geom_line(aes(x = 년월일, y = volume))
ggplot(data = aggr_by_date)+
geom_line(aes(x = 년월일, y = sales))
min(aggr_by_date$sales)
max(aggr_by_date$sales)
min(aggr_by_date$volume), max(aggr_by_date$volume)
(min(aggr_by_date$volume), max(aggr_by_date$volume))
c(min(aggr_by_date$volume), max(aggr_by_date$volume))
ggplot(data = aggr_by_date)+
geom_bar(aes(x = 년월일, y = sales))
ggplot(data = aggr_by_date)+
geom_bar(할인행사여부)
ggplot(data = aggr_by_date)+
geom_bar(aes(할인행사여부))
ggplot(data = aggr_by_date)+
geom_line(aes(x = 년월일, y = sales))
ggplot(data = aggr_by_date)+
geom_boxplot(할인행사여부)
ggplot(data = raw_data)+
geom_boxplot(할인행사여부)
ggplot(data = raw_data$할인행사여부)+
geom_boxplot()
ggplot(data = table(raw_data$할인행사여부))+
geom_boxplot()
ggplot(data = data.frame(raw_data$할인행사여부))+
geom_boxplot()
ggplot(data = data.frame(table(raw_data$할인행사여부)))+
geom_boxplot()
data.frame(table(raw_data$할인행사여부))
ggplot(data = data.frame(table(raw_data$할인행사여부)))+
geom_boxplot(aes(x = Var1, y = Freq))
ggplot(data = data.frame(table(raw_data$할인행사여부)))+
geom_bar(aes(x = Var1, y = Freq))
boxplot(table(raw_data$할인행사여부))
barplot(table(raw_data$할인행사여부))
barplot(table(raw_data$할인행사여부), col = c(3,4))
table(raw_data$브랜드)
data.frame(table(raw_data$브랜드))
matrix(table(raw_data$브랜드)
matrix(table(raw_data$브랜드))
matrix(table(raw_data$브랜드))
data.frame(table(raw_data$브랜드)
data.frame(table(raw_data$브랜드))
table(raw_data$브랜드)
summary(table(raw_data$브랜드))
table(raw_data$브랜드)
length(table(raw_data$브랜드))
table(raw_data$브랜드)
table(raw_data$브랜드)
length(table(raw_data$브랜드))
table(raw_data$라인)
length(table(raw_data$라))
c(length(table(raw_data$라인)), min(table(raw_data$라인)), max(table(raw_data$라인)))
table(raw_data$유형)
table(raw_data$유형)
length(table(raw_data$유))
table(raw_data$유형)
c(length(table(raw_data$유형)), min(table(raw_data$유형)), max(table(raw_data$유형)))
table(raw_data$브랜드)
c(length(table(raw_data$브랜드)), min(table(raw_data$브랜드)), max(table(raw_data$브랜드)))
raw_data$년월일 = as.Date(as.character(raw_data$년월일), format = "%Y%m%d")
aggr_by_prod = raw_data %>% group_by(자재번호) %>% summarize(volume = sum(판매수량), sales = sum(매출액))
aggr_by_prod = raw_data %>% group_by(자재코) %>% summarize(volume = sum(판매수량), sales = sum(매출액))
aggr_by_prod = raw_data %>% group_by(자재코드) %>% summarize(volume = sum(판매수량), sales = sum(매출액))
aggr_by_prod
raw_data
aggr_by_prod = raw_data %>% group_by(자재코드) %>% summarize(prod_name = 제품명[1], volume = sum(판매수량), sales = sum(매출액))
aggr_by_prod
aggr_by_prod = raw_data %>% group_by(자재코드) %>% summarize(prod_name = 제품명[1], volume = sum(판매수량), sales = sum(매출액))
aggr_by_prod %>% arrange(desc(sales))
aggr_by_prod %>% arrange(desc(volume))
table(raw_data$BM)
c(length(table(raw_data$BM)), min(table(raw_data$BM)), max(table(raw_data$BM)))
library(dplyr)
raw_data = read.csv('d:/cns_data/raw_data.csv')[,-1]
raw_data$년월일 = as.Date(as.character(raw_data$년월일), format = "%Y%m%d")
raw_data
promo = read.csv('d:/cns_data/promotion.csv')
promo = promo[promo$프로모션종료일>=20150101,]
promo = promo[,-c(5,6)]
promo$프로모션시작일 = as.Date(as.character(promo$프로모션시작일), format = "%Y%m%d")
promo$프로모션종료일 = as.Date(as.character(promo$프로모션종료일), format = "%Y%m%d")
promo
raw_data$프로모션정보 = NA
raw_data$프로모션명칭 = NA
raw_data$할인내용 = NA
raw_data
promo$프로모션정보 = as.character(promo$프로모션정보)
promo$프로모션명칭 = as.character(promo$프로모션명칭)
promo$할인내용 = as.character(promo$할인내용)
promo = promo[complete.cases(promo),]
unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드])
unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드])[,,-1]
unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드])[,,]
rev(unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드]))
rev(unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드]))[length(unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드]))]
unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드])
for (n in rev(unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드])))
{
x = raw_data[raw_data$자재코드==n,]
y = promo[promo$자재코드==n,]
ptm <- proc.time()
print(paste(which(n==unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드])),'/ 1780'))
for(i in 1:nrow(x))
{
for (m in 1:nrow(y))
{
if (x[i,1] >= y[m,3] & x[i,1] <= y[m,4])
{
x[i,]$프로모션정보 = as.character(y[m,]$프로모션정보)
x[i,]$프로모션명칭 = as.character(y[m,]$프로모션명칭)
x[i,]$할인내용 = as.character(y[m,]$할인내용)
raw_data[raw_data$자재코드==n,][i,] = x[i,]
}
}
}
el.time <- proc.time() - ptm
print(el.time)
}
unique(raw_data$프로모션정보)
library(dplyr)
raw_data %>% filter(자재코드 ==unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드])[1])
promo %>% filter(자재코드 ==unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드])[1])
y = promo %>% filter(자재코드 ==unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드])[1])
y
library(dplyr)
raw_data %>% filter(자재코드 ==unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드])[1]) %>% mutate(프로모션정보 = if(년월일 >= y$프로모션시작일 & 년월일 >=y$프로모션종료일){y$프로모션정보})
raw_data %>% filter(자재코드 ==unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드])[1]) %>% mutate(프로모션정보 = 1)
library(dplyr)
raw_data %>% filter(자재코드 ==unique(promo$자재코드[promo$자재코드 %in% raw_data$자재코드])[1]) %>% mutate(프로모션정보 = if(년월일 >= y$프로모션시작일 & 년월일 >=y$프로모션종료일){as.character(y$프로모션정보)})
as.character(y$프로모션정보)
